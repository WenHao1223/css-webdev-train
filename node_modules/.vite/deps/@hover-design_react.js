import {
  require_jsx_runtime
} from "./chunk-L72NL5LT.js";
import {
  require_react_dom
} from "./chunk-EAX6LFL2.js";
import {
  require_react
} from "./chunk-7CTSMTDC.js";
import {
  __export,
  __reExport,
  __toESM
} from "./chunk-MNTBHR2J.js";

// node_modules/@hover-design/react/src/index.ts
var src_exports2 = {};
__export(src_exports2, {
  Accordion: () => AccordionWithRef,
  AccordionContent: () => AccordionContentWithRef,
  AccordionGroup: () => AccordionGroupWithRef,
  AccordionSummary: () => AccordionSummaryWithRef,
  Alert: () => Alert,
  Avatar: () => AvatarWithRef,
  AvatarGroup: () => AvatarGroupWithRef,
  Badge: () => BadgeWithRef,
  Banner: () => Banner,
  Breadcrumb: () => BreadcrumbWithRef,
  Button: () => ButtonWithRef,
  Card: () => CardWithRef,
  Checkbox: () => CheckboxWithRef,
  CheckboxGroup: () => CheckboxGroupWithRef,
  DateTimePicker: () => DateTimePickerWithRef,
  Dialog: () => Dialog,
  Divider: () => Divider,
  Flex: () => FlexWithRef,
  FlexComponent: () => FlexComponent,
  Grid: () => GridWithRef,
  GridComponent: () => GridComponent,
  HoverContext: () => HoverContext,
  HoverProvider: () => HoverProvider,
  Icon: () => Icon,
  Input: () => InputWithRef,
  Label: () => LabelWithRef,
  List: () => ListWithRef,
  ListItem: () => ListItemWithRef,
  Loader: () => Loader,
  Modal: () => Modal,
  NativeSelect: () => NativeSelect,
  Pill: () => Pill,
  Popover: () => Popover,
  Portal: () => Portal,
  Progress: () => Progress,
  Radio: () => RadioWithRef,
  RadioGroup: () => RadioGroupWithRef,
  Select: () => Select,
  Spinner: () => Spinner,
  Stepper: () => StepperWithRef,
  StepperStep: () => StepperStepWithRef,
  Switch: () => Switch,
  Table: () => TableWithRef,
  TableCaption: () => TableCaptionWithRef,
  Tabs: () => Tabs,
  Tbody: () => TBodyWithRef,
  Td: () => TdWithRef,
  TextArea: () => TextAreaWithRef,
  Tfoot: () => TFootWithRef,
  Th: () => ThWithRef,
  Thead: () => THeadWithRef,
  Tooltip: () => Tooltip,
  Tr: () => TrWithRef,
  UnstyledButton: () => UnstyledButtonWithRef,
  useHoverTheme: () => useHoverTheme
});

// node_modules/@hover-design/react/src/components/Accordion/index.ts
var Accordion_exports = {};
__export(Accordion_exports, {
  Accordion: () => AccordionWithRef,
  AccordionContent: () => AccordionContentWithRef,
  AccordionGroup: () => AccordionGroupWithRef,
  AccordionSummary: () => AccordionSummaryWithRef
});

// node_modules/@hover-design/react/src/components/Accordion/Accordion.tsx
var import_react = __toESM(require_react());
var import_jsx_runtime = __toESM(require_jsx_runtime());
import { accordionThemeClass, detailsClass } from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Accordion/accordion.styles.css.ts";
import "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Accordion/accordion.global.styles.css.ts";
var Accordion = ({ children, onToggle, className, ...nativeProps }, ref) => {
  return (0, import_jsx_runtime.jsx)(
    "details",
    {
      ref,
      onToggle,
      className: `${detailsClass} ${accordionThemeClass} ${className}`,
      ...nativeProps,
      children
    }
  );
};
var AccordionWithRef = import_react.default.forwardRef(Accordion);

// node_modules/@hover-design/react/src/components/Accordion/index.ts
__reExport(Accordion_exports, accordion_styles_star);
import * as accordion_styles_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Accordion/accordion.styles.css.ts";

// node_modules/@hover-design/react/src/components/Accordion/AccordionContent/AccordionContent.tsx
var import_react2 = __toESM(require_react());
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
import { accordionContentClass } from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Accordion/accordion.styles.css.ts";
var AccordionContent = ({ children, className, ...nativeProps }) => {
  return (0, import_jsx_runtime2.jsx)("div", { className: `${accordionContentClass} ${className}`, ...nativeProps, children });
};
var AccordionContentWithRef = import_react2.default.forwardRef(AccordionContent);

// node_modules/@hover-design/react/src/components/Accordion/AccordionGroup/AccordionGroup.tsx
var import_react3 = __toESM(require_react());
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
import { accordionGroupClass } from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Accordion/accordion.styles.css.ts";
var AccordionGroup = ({ children, className, ...nativeProps }, ref) => {
  return (0, import_jsx_runtime3.jsx)(
    "div",
    {
      ref,
      className: `${accordionGroupClass} ${className}`,
      ...nativeProps,
      children
    }
  );
};
var AccordionGroupWithRef = import_react3.default.forwardRef(AccordionGroup);

// node_modules/@vanilla-extract/private/dist/vanilla-extract-private.esm.js
function getVarName(variable) {
  var matches = variable.match(/^var\((.*)\)$/);
  if (matches) {
    return matches[1];
  }
  return variable;
}
function get(obj, path) {
  var result = obj;
  for (var key of path) {
    if (!(key in result)) {
      throw new Error("Path ".concat(path.join(" -> "), " does not exist in object"));
    }
    result = result[key];
  }
  return result;
}
function walkObject(obj, fn) {
  var path = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
  var clone = obj.constructor();
  for (var key in obj) {
    var _value = obj[key];
    var currentPath = [...path, key];
    if (typeof _value === "string" || typeof _value === "number" || _value == null) {
      clone[key] = fn(_value, currentPath);
    } else if (typeof _value === "object" && !Array.isArray(_value)) {
      clone[key] = walkObject(_value, fn, currentPath);
    } else {
      console.warn('Skipping invalid key "'.concat(currentPath.join("."), '". Should be a string, number, null or object. Received: "').concat(Array.isArray(_value) ? "Array" : typeof _value, '"'));
    }
  }
  return clone;
}

// node_modules/@vanilla-extract/dynamic/dist/vanilla-extract-dynamic.esm.js
function assignInlineVars(varsOrContract, tokens) {
  var styles = {};
  if (typeof tokens === "object") {
    var _contract = varsOrContract;
    walkObject(tokens, (value2, path) => {
      if (value2 == null) {
        return;
      }
      var varName2 = get(_contract, path);
      styles[getVarName(varName2)] = String(value2);
    });
  } else {
    var _vars = varsOrContract;
    for (var varName in _vars) {
      var value = _vars[varName];
      if (value == null) {
        continue;
      }
      styles[getVarName(varName)] = value;
    }
  }
  Object.defineProperty(styles, "toString", {
    value: function value2() {
      return Object.keys(this).map((key) => "".concat(key, ":").concat(this[key])).join(";");
    },
    writable: false
  });
  return styles;
}

// node_modules/@hover-design/react/src/components/Accordion/AccordionSummary/AccordionSummary.tsx
var import_react5 = __toESM(require_react());

// node_modules/@hover-design/react/src/components/Flex/Flex.tsx
var import_react4 = __toESM(require_react());
var import_jsx_runtime4 = __toESM(require_jsx_runtime());
var FlexComponent = ({
  alignContent = "normal",
  alignItems = "normal",
  alignSelf = "auto",
  justifyContent = "normal",
  justifyItems = "legacy",
  justifySelf = "auto",
  flexDirection = "row",
  flexWrap = "nowrap",
  flexShrink = "1",
  flexGrow = "0",
  flexBasis = "auto",
  gap = "normal",
  children,
  style,
  display = "flex",
  ...nativeProps
}, ref) => {
  const flexStyles = assignInlineVars({
    display,
    alignContent,
    alignItems,
    alignSelf,
    flexDirection,
    flexWrap,
    justifyContent,
    justifyItems,
    justifySelf,
    flexShrink: flexShrink.toString(),
    flexGrow: flexGrow.toString(),
    flexBasis: flexBasis.toString(),
    gap: gap.toString()
  });
  Object.assign(flexStyles, style);
  return (0, import_jsx_runtime4.jsx)("div", { style: flexStyles, ...nativeProps, ref, children });
};
var FlexWithRef = import_react4.default.forwardRef(FlexComponent);

// node_modules/@hover-design/react/src/components/Icon/Icon.tsx
var import_jsx_runtime5 = __toESM(require_jsx_runtime());
var Icon = ({
  children,
  xmlns = "http://www.w3.org/2000/svg",
  style,
  ...nativeProps
}) => {
  return (0, import_jsx_runtime5.jsx)("svg", { xmlns, style: { display: "block", ...style }, ...nativeProps, children });
};

// node_modules/@hover-design/react/src/components/_internal/Icons/Chevron.tsx
var import_jsx_runtime6 = __toESM(require_jsx_runtime());
var ChevronIcon = (props) => {
  return (0, import_jsx_runtime6.jsxs)(
    Icon,
    {
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      strokeWidth: "2",
      stroke: "currentColor",
      fill: "none",
      strokeLinecap: "round",
      strokeLinejoin: "round",
      ...props,
      children: [
        (0, import_jsx_runtime6.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z", fill: "none" }),
        (0, import_jsx_runtime6.jsx)("polyline", { points: "6 9 12 15 18 9" })
      ]
    }
  );
};
var Chevron_default = ChevronIcon;

// node_modules/@hover-design/react/src/components/Accordion/AccordionSummary/AccordionSummary.tsx
var import_jsx_runtime7 = __toESM(require_jsx_runtime());
import {
  accordionIconClass,
  accordionThemeVars,
  summaryClass
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Accordion/accordion.styles.css.ts";
var DefaultAccordionSummaryIcon = () => {
  return (0, import_jsx_runtime7.jsx)(Chevron_default, { height: "18", width: "18" });
};
var AccordionSummary = ({
  children,
  Icon: Icon2,
  iconPosition = "right",
  iconTransform = "rotate(180deg)",
  iconTransition = "transform 0.2s ease-in-out",
  className,
  style,
  ...nativeProps
}, ref) => {
  const summaryStyle = Object.assign(
    assignInlineVars({
      [accordionThemeVars.accordionTransition]: iconTransition,
      [accordionThemeVars.accordionTransform]: iconTransform
    }),
    style
  );
  const SummaryIcon = () => {
    const accordionIconStyle = accordionIconClass({ position: iconPosition });
    return (0, import_jsx_runtime7.jsx)(
      FlexWithRef,
      {
        "data-attribute": "chevron",
        justifyContent: "center",
        alignItems: "center",
        className: accordionIconStyle,
        children: Icon2 || (0, import_jsx_runtime7.jsx)(DefaultAccordionSummaryIcon, { iconPosition })
      }
    );
  };
  return (0, import_jsx_runtime7.jsxs)(
    "summary",
    {
      ref,
      style: summaryStyle,
      className: `${summaryClass} ${className}`,
      ...nativeProps,
      children: [
        iconPosition === "left" && SummaryIcon(),
        children,
        iconPosition === "right" && SummaryIcon()
      ]
    }
  );
};
var AccordionSummaryWithRef = import_react5.default.forwardRef(AccordionSummary);

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Accordion_exports);

// node_modules/@hover-design/react/src/components/Alert/index.ts
var Alert_exports = {};
__export(Alert_exports, {
  Alert: () => Alert
});

// node_modules/@hover-design/react/src/components/Alert/Alert.tsx
var import_react7 = __toESM(require_react());

// node_modules/@hover-design/react/src/components/Button/index.ts
var Button_exports = {};
__export(Button_exports, {
  Button: () => ButtonWithRef
});

// node_modules/@hover-design/react/src/components/Button/Button.tsx
var import_react6 = __toESM(require_react());

// node_modules/@hover-design/core/src/index.ts
var src_exports = {};
__reExport(src_exports, button_styles_star);
import * as button_styles_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/core/src/components/Button/button.styles.css.ts";

// node_modules/@hover-design/react/src/components/Button/Button.tsx
var import_jsx_runtime8 = __toESM(require_jsx_runtime());
var Button = ({
  variant = "default",
  padding = "small",
  fontSize = "small",
  margin = "default",
  isBlock = false,
  children,
  className,
  ...nativeProps
}, ref) => {
  const buttonStyle = (0, src_exports.buttonStyles)({
    variant,
    padding,
    fontSize,
    margin,
    isBlock
  });
  return (0, import_jsx_runtime8.jsx)(
    "button",
    {
      ref,
      className: `${buttonStyle} ${className || ""}`,
      ...nativeProps,
      children
    }
  );
};
var ButtonWithRef = (0, import_react6.forwardRef)(Button);

// node_modules/@hover-design/react/src/components/Button/index.ts
__reExport(Button_exports, button_styles_star2);
import * as button_styles_star2 from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Button/button.styles.css.ts";

// node_modules/@hover-design/react/src/components/Alert/Alert.tsx
import {
  alertCloseIconStyles,
  alertDangerTheme,
  alertDescriptionStyle,
  alertHeaderStyles,
  alertIconRecipe,
  alertIconTitleSpace,
  alertInfoTheme,
  alertRecipe,
  alertSuccessTheme,
  alertTitleRecipe,
  alertVars,
  alertWarningTheme
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Alert/alert.styles.css.ts";

// node_modules/@hover-design/react/src/components/_internal/Icons/Clear.tsx
var import_jsx_runtime9 = __toESM(require_jsx_runtime());
var Clear = (props) => {
  return (0, import_jsx_runtime9.jsxs)(
    Icon,
    {
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      strokeWidth: "2",
      stroke: "currentColor",
      fill: "none",
      strokeLinecap: "round",
      strokeLinejoin: "round",
      ...props,
      children: [
        (0, import_jsx_runtime9.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z", fill: "none" }),
        (0, import_jsx_runtime9.jsx)("circle", { cx: 12, cy: 12, r: 9 }),
        (0, import_jsx_runtime9.jsx)("path", { d: "M10 10l4 4m0 -4l-4 4" })
      ]
    }
  );
};

// node_modules/@hover-design/react/src/components/_internal/Icons/InfoCircle.tsx
var import_jsx_runtime10 = __toESM(require_jsx_runtime());
var InfoCircle = (props) => {
  return (0, import_jsx_runtime10.jsxs)(
    Icon,
    {
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      strokeWidth: "2",
      stroke: "currentColor",
      fill: "none",
      strokeLinecap: "round",
      strokeLinejoin: "round",
      ...props,
      children: [
        (0, import_jsx_runtime10.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z", fill: "none" }),
        (0, import_jsx_runtime10.jsx)("circle", { cx: "12", cy: "12", r: "9" }),
        (0, import_jsx_runtime10.jsx)("line", { x1: "12", y1: "8", x2: "12.01", y2: "8" }),
        (0, import_jsx_runtime10.jsx)("polyline", { points: "11 12 12 12 12 16 13 16" })
      ]
    }
  );
};
var InfoCircle_default = InfoCircle;

// node_modules/@hover-design/react/src/components/_internal/Icons/CheckCircle.tsx
var import_jsx_runtime11 = __toESM(require_jsx_runtime());
var CheckCircle = (props) => {
  return (0, import_jsx_runtime11.jsxs)(
    Icon,
    {
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      strokeWidth: "2",
      stroke: "currentColor",
      fill: "none",
      strokeLinecap: "round",
      strokeLinejoin: "round",
      ...props,
      children: [
        (0, import_jsx_runtime11.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z", fill: "none" }),
        (0, import_jsx_runtime11.jsx)("circle", { cx: "12", cy: "12", r: "9" }),
        (0, import_jsx_runtime11.jsx)("path", { d: "M9 12l2 2l4 -4" })
      ]
    }
  );
};
var CheckCircle_default = CheckCircle;

// node_modules/@hover-design/react/src/components/_internal/Icons/AlertTriangle.tsx
var import_jsx_runtime12 = __toESM(require_jsx_runtime());
var AlertTriangle = (props) => {
  return (0, import_jsx_runtime12.jsxs)(
    Icon,
    {
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      strokeWidth: "2",
      stroke: "currentColor",
      fill: "none",
      strokeLinecap: "round",
      strokeLinejoin: "round",
      ...props,
      children: [
        (0, import_jsx_runtime12.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z", fill: "none" }),
        (0, import_jsx_runtime12.jsx)("path", { d: "M12 9v2m0 4v.01" }),
        (0, import_jsx_runtime12.jsx)("path", { d: "M5 19h14a2 2 0 0 0 1.84 -2.75l-7.1 -12.25a2 2 0 0 0 -3.5 0l-7.1 12.25a2 2 0 0 0 1.75 2.75" })
      ]
    }
  );
};
var AlertTriangle_default = AlertTriangle;

// node_modules/@hover-design/react/src/components/_internal/Icons/Close.tsx
var import_jsx_runtime13 = __toESM(require_jsx_runtime());
var CloseIcon = (props) => {
  return (0, import_jsx_runtime13.jsxs)(
    Icon,
    {
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      strokeWidth: "2",
      stroke: "currentColor",
      fill: "none",
      strokeLinecap: "round",
      strokeLinejoin: "round",
      ...props,
      children: [
        (0, import_jsx_runtime13.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z", fill: "none" }),
        (0, import_jsx_runtime13.jsx)("line", { x1: "18", y1: "6", x2: "6", y2: "18" }),
        (0, import_jsx_runtime13.jsx)("line", { x1: "6", y1: "6", x2: "18", y2: "18" })
      ]
    }
  );
};
var Close_default = CloseIcon;

// node_modules/@hover-design/react/src/components/Alert/Alert.tsx
var import_jsx_runtime14 = __toESM(require_jsx_runtime());
var AlertComponent = ({
  color,
  backgroundColor,
  icon,
  showIcon = true,
  title,
  variant = "light",
  borderRadius = "4px",
  closeButtonLabel,
  withCloseButton,
  type = "info",
  className,
  style,
  onClose,
  children,
  ...nativeProps
}, ref) => {
  const iconRef = (0, import_react7.useRef)();
  const titleRef = (0, import_react7.useRef)();
  const [iconTitleSpace, setIconTitleSpace] = (0, import_react7.useState)("0px");
  (0, import_react7.useEffect)(() => {
    if (showIcon && title) {
      const iconPosition = iconRef == null ? void 0 : iconRef.current.offsetLeft;
      const titlePosition = titleRef == null ? void 0 : titleRef.current.offsetLeft;
      iconRef.current && titleRef.current && setIconTitleSpace(`${titlePosition - iconPosition}px`);
    }
  }, [iconRef.current, titleRef.current]);
  const getClassName = () => {
    switch (type) {
      case "info":
        return alertInfoTheme;
      case "success":
        return alertSuccessTheme;
      case "warning":
        return alertWarningTheme;
      case "danger":
        return alertDangerTheme;
    }
  };
  const getIcon = () => {
    switch (type) {
      case "info":
        return (0, import_jsx_runtime14.jsx)(InfoCircle_default, {});
      case "success":
        return (0, import_jsx_runtime14.jsx)(CheckCircle_default, {});
      case "warning":
        return (0, import_jsx_runtime14.jsx)(AlertTriangle_default, {});
      case "danger":
        return (0, import_jsx_runtime14.jsx)(Clear, {});
    }
  };
  const alertStyles = alertRecipe({
    variant
  });
  const alertIconStyles = alertIconRecipe({
    isFilled: variant === "filled"
  });
  const alertTitleStyles = alertTitleRecipe({
    isFilled: variant === "filled"
  });
  return (0, import_jsx_runtime14.jsxs)(
    FlexWithRef,
    {
      ref,
      role: "alert",
      className: `${alertStyles} ${getClassName()} ${className}`,
      flexDirection: "column",
      style: {
        ...assignInlineVars({
          [alertVars.color]: color || "",
          [alertVars.backgroundColor]: backgroundColor || "",
          [alertIconTitleSpace]: iconTitleSpace,
          borderRadius
        }),
        ...style
      },
      ...nativeProps,
      children: [
        (0, import_jsx_runtime14.jsxs)(FlexWithRef, { alignItems: "center", className: `${alertHeaderStyles}`, children: [
          showIcon && (0, import_jsx_runtime14.jsx)("div", { ref: iconRef, className: `${alertIconStyles} hover-alert-icon`, children: icon || getIcon() }),
          title && (0, import_jsx_runtime14.jsx)(
            "div",
            {
              ref: titleRef,
              className: `${alertTitleStyles} hover-alert-title`,
              children: title
            }
          )
        ] }),
        (0, import_jsx_runtime14.jsx)(FlexWithRef, { children: children && (0, import_jsx_runtime14.jsx)("div", { className: `${alertDescriptionStyle} hover-alert-description`, children }) }),
        withCloseButton && (0, import_jsx_runtime14.jsx)(
          ButtonWithRef,
          {
            "aria-label": closeButtonLabel,
            className: `${alertIconStyles} ${alertCloseIconStyles} hover-alert-closeButtonIcon`,
            children: (0, import_jsx_runtime14.jsx)(Close_default, { onClick: onClose, height: 18, width: 18 })
          }
        )
      ]
    }
  );
};
var Alert = (0, import_react7.forwardRef)(AlertComponent);

// node_modules/@hover-design/react/src/components/Alert/index.ts
__reExport(Alert_exports, alert_styles_star);
import * as alert_styles_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Alert/alert.styles.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Alert_exports);

// node_modules/@hover-design/react/src/components/Avatar/index.ts
var Avatar_exports = {};
__export(Avatar_exports, {
  Avatar: () => AvatarWithRef,
  AvatarGroup: () => AvatarGroupWithRef
});

// node_modules/@hover-design/react/src/components/Avatar/Avatar.tsx
var import_react8 = __toESM(require_react());
import {
  avatarImg,
  avatarThemeClass,
  avatarThemeVars,
  avatarShapes,
  avatarSizes,
  avatarWrapper
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Avatar/avatar.styles.css.ts";
var import_jsx_runtime15 = __toESM(require_jsx_runtime());
var AvatarComponent = ({
  children,
  src,
  alt,
  borderRadius = "xl",
  size = "md",
  color = "#000",
  textColor = "#fff",
  className,
  style,
  ...nativeProps
}, ref) => {
  const assignVariables = assignInlineVars({
    [avatarThemeVars.avatarStyleColor]: src ? "transparent" : color,
    [avatarThemeVars.avatarStyleTextColor]: textColor,
    [avatarThemeVars.avatarStyleBorderRadius]: avatarShapes[borderRadius] ? avatarShapes[borderRadius] : borderRadius,
    [avatarThemeVars.avatarStyleSize]: avatarSizes[size] ? avatarSizes[size] : size
  });
  return (0, import_jsx_runtime15.jsx)(
    FlexWithRef,
    {
      display: "inline-flex",
      justifyContent: "center",
      alignItems: "center",
      className: `${avatarWrapper} ${avatarThemeClass} ${className || ""}`,
      style: { ...assignVariables, ...style || {} },
      ref,
      ...nativeProps,
      children: src ? (0, import_jsx_runtime15.jsx)("img", { className: `${avatarImg}`, src, alt }) : children
    }
  );
};
var AvatarWithRef = import_react8.default.forwardRef(AvatarComponent);

// node_modules/@hover-design/react/src/components/Avatar/index.ts
__reExport(Avatar_exports, avatar_styles_star);
import * as avatar_styles_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Avatar/avatar.styles.css.ts";

// node_modules/@hover-design/react/src/components/Avatar/AvatarGroup/AvatarGroup.tsx
var import_react9 = __toESM(require_react());
var import_jsx_runtime16 = __toESM(require_jsx_runtime());
import {
  avatarChildClass,
  avatarGaps,
  avatarGroupThemeClass,
  avatarGroupThemeVars
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Avatar/avatar.styles.css.ts";
import "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Avatar/avatar.global.styles.css.ts";
var AvatarGroup = ({ children, gap = "xs", className, style, ...nativeProps }, ref) => {
  const assignVariables = assignInlineVars({
    [avatarGroupThemeVars.avatarStyleGap]: avatarGaps[gap]
  });
  return (0, import_jsx_runtime16.jsx)(
    FlexWithRef,
    {
      alignItems: "center",
      ref,
      className: `${avatarChildClass} ${avatarGroupThemeClass} ${className || ""}`,
      style: { ...assignVariables, ...style || {} },
      ...nativeProps,
      children
    }
  );
};
var AvatarGroupWithRef = import_react9.default.forwardRef(AvatarGroup);

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Avatar_exports);

// node_modules/@hover-design/react/src/components/Badge/index.ts
var Badge_exports = {};
__export(Badge_exports, {
  Badge: () => BadgeWithRef
});

// node_modules/@hover-design/react/src/components/Badge/Badge.tsx
var import_react10 = __toESM(require_react());
import {
  badges,
  badgeWrapper,
  badgeThemeClass,
  badgeThemeVars
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Badge/badge.css.ts";
var import_jsx_runtime17 = __toESM(require_jsx_runtime());
var BadgeComponent = ({
  color = "red",
  textColor = "#fff",
  hide = false,
  shape = "rounded-circle",
  position = "default",
  label,
  children,
  ...props
}, ref) => {
  const badgeStyle = badges({
    shape,
    visible: hide ? "hide" : "show",
    position
  });
  return (0, import_jsx_runtime17.jsxs)("span", { role: "status", className: `${badgeWrapper}`, ref, ...props, children: [
    children,
    (0, import_jsx_runtime17.jsx)(
      "small",
      {
        style: assignInlineVars({
          [badgeThemeVars.badgeStyleColor]: color,
          [badgeThemeVars.badgeStyleTextColor]: textColor
        }),
        className: `${badgeStyle}  ${badgeThemeClass}`,
        children: label
      }
    )
  ] });
};
var BadgeWithRef = import_react10.default.forwardRef(BadgeComponent);

// node_modules/@hover-design/react/src/components/Badge/index.ts
__reExport(Badge_exports, badge_star);
import * as badge_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Badge/badge.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Badge_exports);

// node_modules/@hover-design/react/src/components/Banner/index.tsx
var Banner_exports = {};
__export(Banner_exports, {
  Banner: () => Banner
});

// node_modules/@hover-design/react/src/components/Banner/Banner.tsx
var import_react11 = __toESM(require_react());
import {
  bannerContainerStyles,
  bannerCtaIconRecipe
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Banner/banner.styles.css.ts";

// node_modules/@hover-design/react/src/components/_internal/Icons/ArrowDown.tsx
var import_jsx_runtime18 = __toESM(require_jsx_runtime());
var ArrowDown = (props) => {
  return (0, import_jsx_runtime18.jsxs)(
    Icon,
    {
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      strokeWidth: "2",
      stroke: "currentColor",
      fill: "none",
      strokeLinecap: "round",
      strokeLinejoin: "round",
      ...props,
      children: [
        (0, import_jsx_runtime18.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z", fill: "none" }),
        (0, import_jsx_runtime18.jsx)("line", { x1: 12, y1: 5, x2: 12, y2: 19 }),
        (0, import_jsx_runtime18.jsx)("line", { x1: 18, y1: 13, x2: 12, y2: 19 }),
        (0, import_jsx_runtime18.jsx)("line", { x1: 6, y1: 13, x2: 12, y2: 19 })
      ]
    }
  );
};

// node_modules/@hover-design/react/src/components/Banner/Banner.tsx
import "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Banner/banner.global.styles.css.ts";
var import_jsx_runtime19 = __toESM(require_jsx_runtime());
var BannerComponent = ({
  showIcon = false,
  children,
  alignment = "left",
  showCtaButton = false,
  ctaIcon,
  ctaAction,
  className,
  style,
  ...props
}, ref) => {
  const getAlignment = () => {
    switch (alignment) {
      case "left":
        return "flex-start";
      case "right":
        return "flex-end";
      case "center":
        return "center";
      default:
        break;
    }
  };
  const bannerCtaIconStyles = bannerCtaIconRecipe({
    alignment
  });
  return (0, import_jsx_runtime19.jsxs)(
    "div",
    {
      ref,
      className: `${bannerContainerStyles} ${className}`,
      style,
      children: [
        (0, import_jsx_runtime19.jsx)(
          Alert,
          {
            showIcon,
            className: `${alignment !== "left" && "hover-banner-not-left-aligned"} hover-banner-alert`,
            style: { alignItems: getAlignment() },
            ...props,
            withCloseButton: false,
            children
          }
        ),
        showCtaButton && (0, import_jsx_runtime19.jsx)(
          ButtonWithRef,
          {
            onClick: ctaAction,
            className: `${bannerCtaIconStyles} hover-banner-cta-icon`,
            children: ctaIcon || (0, import_jsx_runtime19.jsx)(ArrowDown, { height: 18, width: 18 })
          }
        )
      ]
    }
  );
};
var Banner = (0, import_react11.forwardRef)(BannerComponent);

// node_modules/@hover-design/react/src/components/Banner/index.tsx
__reExport(Banner_exports, banner_styles_star);
import * as banner_styles_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Banner/banner.styles.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Banner_exports);
__reExport(src_exports2, Button_exports);

// node_modules/@hover-design/react/src/components/Breadcrumb/index.ts
var Breadcrumb_exports = {};
__export(Breadcrumb_exports, {
  Breadcrumb: () => BreadcrumbWithRef
});

// node_modules/@hover-design/react/src/components/Breadcrumb/Breadcrumb.tsx
var import_react12 = __toESM(require_react());
var import_jsx_runtime20 = __toESM(require_jsx_runtime());
import {
  breadcrumbWrapper,
  crumbSeparator,
  crumbTitle
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Breadcrumb/breadcrumb.css.ts";
var Breadcrumb = ({ crumbs, separator = "/", className, ...nativeProps }, ref) => {
  return (0, import_jsx_runtime20.jsx)(
    "div",
    {
      ref,
      className: `${breadcrumbWrapper} ${className}`,
      ...nativeProps,
      children: crumbs.map((b, index, arr) => {
        return (0, import_jsx_runtime20.jsxs)(import_react12.default.Fragment, { children: [
          (0, import_jsx_runtime20.jsx)("a", { className: `${crumbTitle}`, href: b.href, children: b.title }),
          arr.length - 1 !== index && (0, import_jsx_runtime20.jsx)("span", { className: `${crumbSeparator}`, children: separator })
        ] }, index);
      })
    }
  );
};
var BreadcrumbWithRef = (0, import_react12.forwardRef)(Breadcrumb);

// node_modules/@hover-design/react/src/components/Breadcrumb/index.ts
__reExport(Breadcrumb_exports, breadcrumb_star);
import * as breadcrumb_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Breadcrumb/breadcrumb.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Breadcrumb_exports);

// node_modules/@hover-design/react/src/components/Card/index.ts
var Card_exports = {};
__export(Card_exports, {
  Card: () => CardWithRef
});

// node_modules/@hover-design/react/src/components/Card/Card.tsx
var import_react13 = __toESM(require_react());
var import_jsx_runtime21 = __toESM(require_jsx_runtime());
import { cardStyles } from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Card/card.styles.css.ts";
var Card = ({
  children,
  padding = "small",
  fontSize = "small",
  margin = "default",
  variant = "plain",
  className,
  ...nativeDivProps
}, ref) => {
  const cardStyle = cardStyles({
    variant,
    padding,
    fontSize,
    margin
  });
  return (0, import_jsx_runtime21.jsx)(
    "div",
    {
      ref,
      className: `${cardStyle} ${className || ""}`,
      ...nativeDivProps,
      children
    }
  );
};
var CardWithRef = (0, import_react13.forwardRef)(Card);

// node_modules/@hover-design/react/src/components/Card/index.ts
__reExport(Card_exports, card_styles_star);
import * as card_styles_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Card/card.styles.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Card_exports);

// node_modules/@hover-design/react/src/components/Checkbox/index.ts
var Checkbox_exports = {};
__export(Checkbox_exports, {
  Checkbox: () => CheckboxWithRef,
  CheckboxGroup: () => CheckboxGroupWithRef
});

// node_modules/@hover-design/react/src/components/Checkbox/Checkbox.tsx
var import_react14 = __toESM(require_react());
import "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Checkbox/checkbox.global.styles.css.ts";

// node_modules/@hover-design/react/src/utils/object-utils.ts
var eliminateUndefinedKeys = (record) => {
  const keys = Object.keys(record);
  const eliminated = {};
  for (const key of keys) {
    const value = record[key];
    if (value !== void 0) {
      eliminated[key] = value;
    }
  }
  return eliminated;
};

// node_modules/@hover-design/react/src/components/Checkbox/Checkbox.tsx
import {
  checkboxBorderRadius,
  checkboxCheckMarkClass,
  checkboxSizes,
  checkboxThemeClass,
  checkboxThemeVars,
  checkboxWrapperClass
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Checkbox/checkbox.styles.css.ts";

// node_modules/@hover-design/react/src/components/_internal/Icons/CheckIcon.tsx
var import_jsx_runtime22 = __toESM(require_jsx_runtime());
var CheckIcon = (props) => {
  return (0, import_jsx_runtime22.jsx)(
    Icon,
    {
      width: "24",
      height: "24",
      strokeWidth: "2",
      stroke: "currentColor",
      fill: "none",
      strokeLinecap: "round",
      strokeLinejoin: "round",
      viewBox: "0 0 12 10",
      ...props,
      children: (0, import_jsx_runtime22.jsx)(
        "path",
        {
          fill: "currentColor",
          stroke: "none",
          d: "M11.915 1.548 10.367 0 4.045 6.315 1.557 3.827 0 5.373l4.045 4.046 7.87-7.871Z"
        }
      )
    }
  );
};

// node_modules/@hover-design/react/src/components/_internal/Icons/DashIcon.tsx
var import_jsx_runtime23 = __toESM(require_jsx_runtime());
var DashIcon = (props) => {
  return (0, import_jsx_runtime23.jsx)(
    Icon,
    {
      width: "24",
      height: "24",
      strokeWidth: "2",
      stroke: "currentColor",
      fill: "none",
      strokeLinecap: "round",
      strokeLinejoin: "round",
      viewBox: "0 0 32 6",
      ...props,
      children: (0, import_jsx_runtime23.jsx)("rect", { width: "32", height: "6", fill: "currentColor", rx: "3" })
    }
  );
};

// node_modules/@hover-design/react/src/components/_internal/Icons/SvgDot.tsx
var import_jsx_runtime24 = __toESM(require_jsx_runtime());
var SvgDot = () => {
  return (0, import_jsx_runtime24.jsx)(Icon, { viewBox: "0 0 6 6", children: (0, import_jsx_runtime24.jsx)("circle", { fill: "currentColor", cx: "3", cy: "3", r: "3" }) });
};

// node_modules/@hover-design/react/src/components/Checkbox/Checkbox.tsx
var import_jsx_runtime25 = __toESM(require_jsx_runtime());
var Checkbox = ({
  className,
  style,
  value,
  name,
  checked,
  indeterminate,
  borderRadius = "sm",
  checkboxSize = "xs",
  isDisabled = false,
  baseStyles,
  disabledStyles,
  selectedStyles,
  indeterminateStyles,
  ...nativeProps
}, ref) => {
  const assignVariables = assignInlineVars(
    eliminateUndefinedKeys({
      [checkboxThemeVars.checkboxStyleSize]: checkboxSizes[checkboxSize] ? checkboxSizes[checkboxSize] : void 0,
      [checkboxThemeVars.checkboxStyleBorderRadius]: checkboxBorderRadius[borderRadius] ? checkboxBorderRadius[borderRadius] : borderRadius,
      [checkboxThemeVars.baseStyles.backgroundColor]: baseStyles == null ? void 0 : baseStyles.backgroundColor,
      [checkboxThemeVars.baseStyles.borderColor]: baseStyles == null ? void 0 : baseStyles.borderColor,
      [checkboxThemeVars.selectedStyles.backgroundColor]: selectedStyles == null ? void 0 : selectedStyles.backgroundColor,
      [checkboxThemeVars.selectedStyles.borderColor]: selectedStyles == null ? void 0 : selectedStyles.borderColor,
      [checkboxThemeVars.selectedStyles.color]: selectedStyles == null ? void 0 : selectedStyles.color,
      [checkboxThemeVars.disabledStyles.backgroundColor]: disabledStyles == null ? void 0 : disabledStyles.backgroundColor,
      [checkboxThemeVars.disabledStyles.borderColor]: disabledStyles == null ? void 0 : disabledStyles.borderColor,
      [checkboxThemeVars.indeterminateStyles.backgroundColor]: indeterminateStyles == null ? void 0 : indeterminateStyles.backgroundColor,
      [checkboxThemeVars.indeterminateStyles.borderColor]: indeterminateStyles == null ? void 0 : indeterminateStyles.borderColor,
      [checkboxThemeVars.indeterminateStyles.color]: indeterminateStyles == null ? void 0 : indeterminateStyles.color
    })
  );
  return (0, import_jsx_runtime25.jsxs)(
    "div",
    {
      className: `${checkboxWrapperClass} ${checkboxThemeClass} ${className || ""}`,
      style: { ...assignVariables, ...style || {} },
      children: [
        (0, import_jsx_runtime25.jsx)(
          "input",
          {
            ref,
            ...nativeProps,
            type: "checkbox",
            value,
            name,
            checked,
            disabled: isDisabled
          }
        ),
        (0, import_jsx_runtime25.jsxs)(
          "div",
          {
            "aria-hidden": "true",
            className: `${checkboxCheckMarkClass}`,
            "data-checked": checked ? "true" : "false",
            "data-indeterminate": indeterminate ? "true" : "false",
            "data-disabled": isDisabled ? "true" : "false",
            children: [
              checked && !indeterminate ? (0, import_jsx_runtime25.jsx)(CheckIcon, {}) : null,
              !checked && indeterminate ? (0, import_jsx_runtime25.jsx)(DashIcon, {}) : null
            ]
          }
        )
      ]
    }
  );
};
var CheckboxWithRef = import_react14.default.forwardRef(Checkbox);

// node_modules/@hover-design/react/src/components/Checkbox/index.ts
__reExport(Checkbox_exports, checkbox_styles_star);
import * as checkbox_styles_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Checkbox/checkbox.styles.css.ts";

// node_modules/@hover-design/react/src/components/Checkbox/CheckboxGroup/CheckboxGroup.tsx
var import_react15 = __toESM(require_react());
var import_jsx_runtime26 = __toESM(require_jsx_runtime());
import {
  checkboxGroupChildClass,
  checkboxGroupSpacing
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Checkbox/checkbox.styles.css.ts";
var CheckboxGroup = ({
  children,
  className,
  style,
  orientation = "horizontal",
  spacing = "xs",
  ...nativeProps
}, ref) => {
  const assignVariables = assignInlineVars(eliminateUndefinedKeys({}));
  return (0, import_jsx_runtime26.jsx)(
    FlexWithRef,
    {
      flexDirection: orientation === "horizontal" ? "row" : "column",
      ref,
      gap: checkboxGroupSpacing[spacing],
      className: ` ${orientation === "vertical" ? checkboxGroupChildClass : ""} ${className || ""}`,
      style: { ...assignVariables, ...style || {} },
      ...nativeProps,
      children
    }
  );
};
var CheckboxGroupWithRef = import_react15.default.forwardRef(CheckboxGroup);

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Checkbox_exports);

// node_modules/@hover-design/react/src/components/DateAndTime/DateTimePicker.tsx
var import_react17 = __toESM(require_react());

// node_modules/@hover-design/react/src/components/Input/index.ts
var Input_exports = {};
__export(Input_exports, {
  Input: () => InputWithRef
});

// node_modules/@hover-design/react/src/components/Input/Input.tsx
var import_react16 = __toESM(require_react());
import {
  inputClass,
  inputThemeClass,
  inputThemeVars,
  inputWrapperClass,
  iconWrapper,
  leftIconWrapper,
  rightIconWrapper
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Input/input.styles.css.ts";

// node_modules/@hover-design/react/src/styles/tokens/colors.ts
var lightColors = {
  brand: {
    100: "hsla(51,10%,91%,1)",
    200: "hsla(51,33%,91%,1)",
    300: "hsla(51,76%,91%,1)",
    400: "hsla(213, 84%, 19%, 1)"
  },
  typography: {
    200: "hsla(0, 0%, 25%,1)",
    500: "hsla(0, 0%, 10%,1)",
    900: "hsla(0, 0%, 0%,1)"
  },
  success: "hsla(145, 63%, 42%, 1)",
  warning: "hsla(45, 74%, 56%, 1)",
  error: "hsla(0, 79%, 63%, 1)"
};

// node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

// node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}

// node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}

// node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}

// node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}

// node_modules/@babel/runtime/helpers/esm/isNativeFunction.js
function _isNativeFunction(fn) {
  try {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  } catch (e) {
    return typeof fn === "function";
  }
}

// node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}

// node_modules/@babel/runtime/helpers/esm/construct.js
function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct.bind();
  } else {
    _construct = function _construct2(Parent2, args2, Class2) {
      var a = [null];
      a.push.apply(a, args2);
      var Constructor = Function.bind.apply(Parent2, a);
      var instance = new Constructor();
      if (Class2)
        _setPrototypeOf(instance, Class2.prototype);
      return instance;
    };
  }
  return _construct.apply(null, arguments);
}

// node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js
function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
    if (Class2 === null || !_isNativeFunction(Class2))
      return Class2;
    if (typeof Class2 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class2))
        return _cache.get(Class2);
      _cache.set(Class2, Wrapper);
    }
    function Wrapper() {
      return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class2.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class2);
  };
  return _wrapNativeSuper(Class);
}

// node_modules/polished/dist/polished.esm.js
var ERRORS = {
  "1": "Passed invalid arguments to hsl, please pass multiple numbers e.g. hsl(360, 0.75, 0.4) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75 }).\n\n",
  "2": "Passed invalid arguments to hsla, please pass multiple numbers e.g. hsla(360, 0.75, 0.4, 0.7) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75, alpha: 0.7 }).\n\n",
  "3": "Passed an incorrect argument to a color function, please pass a string representation of a color.\n\n",
  "4": "Couldn't generate valid rgb string from %s, it returned %s.\n\n",
  "5": "Couldn't parse the color string. Please provide the color as a string in hex, rgb, rgba, hsl or hsla notation.\n\n",
  "6": "Passed invalid arguments to rgb, please pass multiple numbers e.g. rgb(255, 205, 100) or an object e.g. rgb({ red: 255, green: 205, blue: 100 }).\n\n",
  "7": "Passed invalid arguments to rgba, please pass multiple numbers e.g. rgb(255, 205, 100, 0.75) or an object e.g. rgb({ red: 255, green: 205, blue: 100, alpha: 0.75 }).\n\n",
  "8": "Passed invalid argument to toColorString, please pass a RgbColor, RgbaColor, HslColor or HslaColor object.\n\n",
  "9": "Please provide a number of steps to the modularScale helper.\n\n",
  "10": "Please pass a number or one of the predefined scales to the modularScale helper as the ratio.\n\n",
  "11": 'Invalid value passed as base to modularScale, expected number or em string but got "%s"\n\n',
  "12": 'Expected a string ending in "px" or a number passed as the first argument to %s(), got "%s" instead.\n\n',
  "13": 'Expected a string ending in "px" or a number passed as the second argument to %s(), got "%s" instead.\n\n',
  "14": 'Passed invalid pixel value ("%s") to %s(), please pass a value like "12px" or 12.\n\n',
  "15": 'Passed invalid base value ("%s") to %s(), please pass a value like "12px" or 12.\n\n',
  "16": "You must provide a template to this method.\n\n",
  "17": "You passed an unsupported selector state to this method.\n\n",
  "18": "minScreen and maxScreen must be provided as stringified numbers with the same units.\n\n",
  "19": "fromSize and toSize must be provided as stringified numbers with the same units.\n\n",
  "20": "expects either an array of objects or a single object with the properties prop, fromSize, and toSize.\n\n",
  "21": "expects the objects in the first argument array to have the properties `prop`, `fromSize`, and `toSize`.\n\n",
  "22": "expects the first argument object to have the properties `prop`, `fromSize`, and `toSize`.\n\n",
  "23": "fontFace expects a name of a font-family.\n\n",
  "24": "fontFace expects either the path to the font file(s) or a name of a local copy.\n\n",
  "25": "fontFace expects localFonts to be an array.\n\n",
  "26": "fontFace expects fileFormats to be an array.\n\n",
  "27": "radialGradient requries at least 2 color-stops to properly render.\n\n",
  "28": "Please supply a filename to retinaImage() as the first argument.\n\n",
  "29": "Passed invalid argument to triangle, please pass correct pointingDirection e.g. 'right'.\n\n",
  "30": "Passed an invalid value to `height` or `width`. Please provide a pixel based unit.\n\n",
  "31": "The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation\n\n",
  "32": "To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s')\n\n",
  "33": "The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation\n\n",
  "34": "borderRadius expects a radius value as a string or number as the second argument.\n\n",
  "35": 'borderRadius expects one of "top", "bottom", "left" or "right" as the first argument.\n\n',
  "36": "Property must be a string value.\n\n",
  "37": "Syntax Error at %s.\n\n",
  "38": "Formula contains a function that needs parentheses at %s.\n\n",
  "39": "Formula is missing closing parenthesis at %s.\n\n",
  "40": "Formula has too many closing parentheses at %s.\n\n",
  "41": "All values in a formula must have the same unit or be unitless.\n\n",
  "42": "Please provide a number of steps to the modularScale helper.\n\n",
  "43": "Please pass a number or one of the predefined scales to the modularScale helper as the ratio.\n\n",
  "44": "Invalid value passed as base to modularScale, expected number or em/rem string but got %s.\n\n",
  "45": "Passed invalid argument to hslToColorString, please pass a HslColor or HslaColor object.\n\n",
  "46": "Passed invalid argument to rgbToColorString, please pass a RgbColor or RgbaColor object.\n\n",
  "47": "minScreen and maxScreen must be provided as stringified numbers with the same units.\n\n",
  "48": "fromSize and toSize must be provided as stringified numbers with the same units.\n\n",
  "49": "Expects either an array of objects or a single object with the properties prop, fromSize, and toSize.\n\n",
  "50": "Expects the objects in the first argument array to have the properties prop, fromSize, and toSize.\n\n",
  "51": "Expects the first argument object to have the properties prop, fromSize, and toSize.\n\n",
  "52": "fontFace expects either the path to the font file(s) or a name of a local copy.\n\n",
  "53": "fontFace expects localFonts to be an array.\n\n",
  "54": "fontFace expects fileFormats to be an array.\n\n",
  "55": "fontFace expects a name of a font-family.\n\n",
  "56": "linearGradient requries at least 2 color-stops to properly render.\n\n",
  "57": "radialGradient requries at least 2 color-stops to properly render.\n\n",
  "58": "Please supply a filename to retinaImage() as the first argument.\n\n",
  "59": "Passed invalid argument to triangle, please pass correct pointingDirection e.g. 'right'.\n\n",
  "60": "Passed an invalid value to `height` or `width`. Please provide a pixel based unit.\n\n",
  "61": "Property must be a string value.\n\n",
  "62": "borderRadius expects a radius value as a string or number as the second argument.\n\n",
  "63": 'borderRadius expects one of "top", "bottom", "left" or "right" as the first argument.\n\n',
  "64": "The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation.\n\n",
  "65": "To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s').\n\n",
  "66": "The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation.\n\n",
  "67": "You must provide a template to this method.\n\n",
  "68": "You passed an unsupported selector state to this method.\n\n",
  "69": 'Expected a string ending in "px" or a number passed as the first argument to %s(), got %s instead.\n\n',
  "70": 'Expected a string ending in "px" or a number passed as the second argument to %s(), got %s instead.\n\n',
  "71": 'Passed invalid pixel value %s to %s(), please pass a value like "12px" or 12.\n\n',
  "72": 'Passed invalid base value %s to %s(), please pass a value like "12px" or 12.\n\n',
  "73": "Please provide a valid CSS variable.\n\n",
  "74": "CSS variable not found and no default was provided.\n\n",
  "75": "important requires a valid style object, got a %s instead.\n\n",
  "76": "fromSize and toSize must be provided as stringified numbers with the same units as minScreen and maxScreen.\n\n",
  "77": 'remToPx expects a value in "rem" but you provided it in "%s".\n\n',
  "78": 'base must be set in "px" or "%" but you set it in "%s".\n'
};
function format() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  var a = args[0];
  var b = [];
  var c;
  for (c = 1; c < args.length; c += 1) {
    b.push(args[c]);
  }
  b.forEach(function(d) {
    a = a.replace(/%[a-z]/, d);
  });
  return a;
}
var PolishedError = function(_Error) {
  _inheritsLoose(PolishedError2, _Error);
  function PolishedError2(code) {
    var _this;
    if (false) {
      _this = _Error.call(this, "An error occurred. See https://github.com/styled-components/polished/blob/main/src/internalHelpers/errors.md#" + code + " for more information.") || this;
    } else {
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }
      _this = _Error.call(this, format.apply(void 0, [ERRORS[code]].concat(args))) || this;
    }
    return _assertThisInitialized(_this);
  }
  return PolishedError2;
}(_wrapNativeSuper(Error));
function endsWith(string, suffix) {
  return string.substr(-suffix.length) === suffix;
}
var cssRegex$1 = /^([+-]?(?:\d+|\d*\.\d+))([a-z]*|%)$/;
function stripUnit(value) {
  if (typeof value !== "string")
    return value;
  var matchedValue = value.match(cssRegex$1);
  return matchedValue ? parseFloat(value) : value;
}
var pxtoFactory = function pxtoFactory2(to) {
  return function(pxval, base) {
    if (base === void 0) {
      base = "16px";
    }
    var newPxval = pxval;
    var newBase = base;
    if (typeof pxval === "string") {
      if (!endsWith(pxval, "px")) {
        throw new PolishedError(69, to, pxval);
      }
      newPxval = stripUnit(pxval);
    }
    if (typeof base === "string") {
      if (!endsWith(base, "px")) {
        throw new PolishedError(70, to, base);
      }
      newBase = stripUnit(base);
    }
    if (typeof newPxval === "string") {
      throw new PolishedError(71, pxval, to);
    }
    if (typeof newBase === "string") {
      throw new PolishedError(72, base, to);
    }
    return "" + newPxval / newBase + to;
  };
};
var pixelsto = pxtoFactory;
var em = pixelsto("em");
var cssRegex = /^([+-]?(?:\d+|\d*\.\d+))([a-z]*|%)$/;
function getValueAndUnit(value) {
  if (typeof value !== "string")
    return [value, ""];
  var matchedValue = value.match(cssRegex);
  if (matchedValue)
    return [parseFloat(value), matchedValue[2]];
  return [value, void 0];
}
var ratioNames = {
  minorSecond: 1.067,
  majorSecond: 1.125,
  minorThird: 1.2,
  majorThird: 1.25,
  perfectFourth: 1.333,
  augFourth: 1.414,
  perfectFifth: 1.5,
  minorSixth: 1.6,
  goldenSection: 1.618,
  majorSixth: 1.667,
  minorSeventh: 1.778,
  majorSeventh: 1.875,
  octave: 2,
  majorTenth: 2.5,
  majorEleventh: 2.667,
  majorTwelfth: 3,
  doubleOctave: 4
};
function getRatio(ratioName) {
  return ratioNames[ratioName];
}
function modularScale(steps, base, ratio) {
  if (base === void 0) {
    base = "1em";
  }
  if (ratio === void 0) {
    ratio = 1.333;
  }
  if (typeof steps !== "number") {
    throw new PolishedError(42);
  }
  if (typeof ratio === "string" && !ratioNames[ratio]) {
    throw new PolishedError(43);
  }
  var _ref = typeof base === "string" ? getValueAndUnit(base) : [base, ""], realBase = _ref[0], unit = _ref[1];
  var realRatio = typeof ratio === "string" ? getRatio(ratio) : ratio;
  if (typeof realBase === "string") {
    throw new PolishedError(44, base);
  }
  return "" + realBase * Math.pow(realRatio, steps) + (unit || "");
}
var rem = pixelsto("rem");
function colorToInt(color) {
  return Math.round(color * 255);
}
function convertToInt(red, green, blue) {
  return colorToInt(red) + "," + colorToInt(green) + "," + colorToInt(blue);
}
function hslToRgb(hue, saturation, lightness, convert) {
  if (convert === void 0) {
    convert = convertToInt;
  }
  if (saturation === 0) {
    return convert(lightness, lightness, lightness);
  }
  var huePrime = (hue % 360 + 360) % 360 / 60;
  var chroma = (1 - Math.abs(2 * lightness - 1)) * saturation;
  var secondComponent = chroma * (1 - Math.abs(huePrime % 2 - 1));
  var red = 0;
  var green = 0;
  var blue = 0;
  if (huePrime >= 0 && huePrime < 1) {
    red = chroma;
    green = secondComponent;
  } else if (huePrime >= 1 && huePrime < 2) {
    red = secondComponent;
    green = chroma;
  } else if (huePrime >= 2 && huePrime < 3) {
    green = chroma;
    blue = secondComponent;
  } else if (huePrime >= 3 && huePrime < 4) {
    green = secondComponent;
    blue = chroma;
  } else if (huePrime >= 4 && huePrime < 5) {
    red = secondComponent;
    blue = chroma;
  } else if (huePrime >= 5 && huePrime < 6) {
    red = chroma;
    blue = secondComponent;
  }
  var lightnessModification = lightness - chroma / 2;
  var finalRed = red + lightnessModification;
  var finalGreen = green + lightnessModification;
  var finalBlue = blue + lightnessModification;
  return convert(finalRed, finalGreen, finalBlue);
}
var namedColorMap = {
  aliceblue: "f0f8ff",
  antiquewhite: "faebd7",
  aqua: "00ffff",
  aquamarine: "7fffd4",
  azure: "f0ffff",
  beige: "f5f5dc",
  bisque: "ffe4c4",
  black: "000",
  blanchedalmond: "ffebcd",
  blue: "0000ff",
  blueviolet: "8a2be2",
  brown: "a52a2a",
  burlywood: "deb887",
  cadetblue: "5f9ea0",
  chartreuse: "7fff00",
  chocolate: "d2691e",
  coral: "ff7f50",
  cornflowerblue: "6495ed",
  cornsilk: "fff8dc",
  crimson: "dc143c",
  cyan: "00ffff",
  darkblue: "00008b",
  darkcyan: "008b8b",
  darkgoldenrod: "b8860b",
  darkgray: "a9a9a9",
  darkgreen: "006400",
  darkgrey: "a9a9a9",
  darkkhaki: "bdb76b",
  darkmagenta: "8b008b",
  darkolivegreen: "556b2f",
  darkorange: "ff8c00",
  darkorchid: "9932cc",
  darkred: "8b0000",
  darksalmon: "e9967a",
  darkseagreen: "8fbc8f",
  darkslateblue: "483d8b",
  darkslategray: "2f4f4f",
  darkslategrey: "2f4f4f",
  darkturquoise: "00ced1",
  darkviolet: "9400d3",
  deeppink: "ff1493",
  deepskyblue: "00bfff",
  dimgray: "696969",
  dimgrey: "696969",
  dodgerblue: "1e90ff",
  firebrick: "b22222",
  floralwhite: "fffaf0",
  forestgreen: "228b22",
  fuchsia: "ff00ff",
  gainsboro: "dcdcdc",
  ghostwhite: "f8f8ff",
  gold: "ffd700",
  goldenrod: "daa520",
  gray: "808080",
  green: "008000",
  greenyellow: "adff2f",
  grey: "808080",
  honeydew: "f0fff0",
  hotpink: "ff69b4",
  indianred: "cd5c5c",
  indigo: "4b0082",
  ivory: "fffff0",
  khaki: "f0e68c",
  lavender: "e6e6fa",
  lavenderblush: "fff0f5",
  lawngreen: "7cfc00",
  lemonchiffon: "fffacd",
  lightblue: "add8e6",
  lightcoral: "f08080",
  lightcyan: "e0ffff",
  lightgoldenrodyellow: "fafad2",
  lightgray: "d3d3d3",
  lightgreen: "90ee90",
  lightgrey: "d3d3d3",
  lightpink: "ffb6c1",
  lightsalmon: "ffa07a",
  lightseagreen: "20b2aa",
  lightskyblue: "87cefa",
  lightslategray: "789",
  lightslategrey: "789",
  lightsteelblue: "b0c4de",
  lightyellow: "ffffe0",
  lime: "0f0",
  limegreen: "32cd32",
  linen: "faf0e6",
  magenta: "f0f",
  maroon: "800000",
  mediumaquamarine: "66cdaa",
  mediumblue: "0000cd",
  mediumorchid: "ba55d3",
  mediumpurple: "9370db",
  mediumseagreen: "3cb371",
  mediumslateblue: "7b68ee",
  mediumspringgreen: "00fa9a",
  mediumturquoise: "48d1cc",
  mediumvioletred: "c71585",
  midnightblue: "191970",
  mintcream: "f5fffa",
  mistyrose: "ffe4e1",
  moccasin: "ffe4b5",
  navajowhite: "ffdead",
  navy: "000080",
  oldlace: "fdf5e6",
  olive: "808000",
  olivedrab: "6b8e23",
  orange: "ffa500",
  orangered: "ff4500",
  orchid: "da70d6",
  palegoldenrod: "eee8aa",
  palegreen: "98fb98",
  paleturquoise: "afeeee",
  palevioletred: "db7093",
  papayawhip: "ffefd5",
  peachpuff: "ffdab9",
  peru: "cd853f",
  pink: "ffc0cb",
  plum: "dda0dd",
  powderblue: "b0e0e6",
  purple: "800080",
  rebeccapurple: "639",
  red: "f00",
  rosybrown: "bc8f8f",
  royalblue: "4169e1",
  saddlebrown: "8b4513",
  salmon: "fa8072",
  sandybrown: "f4a460",
  seagreen: "2e8b57",
  seashell: "fff5ee",
  sienna: "a0522d",
  silver: "c0c0c0",
  skyblue: "87ceeb",
  slateblue: "6a5acd",
  slategray: "708090",
  slategrey: "708090",
  snow: "fffafa",
  springgreen: "00ff7f",
  steelblue: "4682b4",
  tan: "d2b48c",
  teal: "008080",
  thistle: "d8bfd8",
  tomato: "ff6347",
  turquoise: "40e0d0",
  violet: "ee82ee",
  wheat: "f5deb3",
  white: "fff",
  whitesmoke: "f5f5f5",
  yellow: "ff0",
  yellowgreen: "9acd32"
};
function nameToHex(color) {
  if (typeof color !== "string")
    return color;
  var normalizedColorName = color.toLowerCase();
  return namedColorMap[normalizedColorName] ? "#" + namedColorMap[normalizedColorName] : color;
}
var hexRegex = /^#[a-fA-F0-9]{6}$/;
var hexRgbaRegex = /^#[a-fA-F0-9]{8}$/;
var reducedHexRegex = /^#[a-fA-F0-9]{3}$/;
var reducedRgbaHexRegex = /^#[a-fA-F0-9]{4}$/;
var rgbRegex = /^rgb\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*\)$/i;
var rgbaRegex = /^rgb(?:a)?\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i;
var hslRegex = /^hsl\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*\)$/i;
var hslaRegex = /^hsl(?:a)?\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i;
function parseToRgb(color) {
  if (typeof color !== "string") {
    throw new PolishedError(3);
  }
  var normalizedColor = nameToHex(color);
  if (normalizedColor.match(hexRegex)) {
    return {
      red: parseInt("" + normalizedColor[1] + normalizedColor[2], 16),
      green: parseInt("" + normalizedColor[3] + normalizedColor[4], 16),
      blue: parseInt("" + normalizedColor[5] + normalizedColor[6], 16)
    };
  }
  if (normalizedColor.match(hexRgbaRegex)) {
    var alpha = parseFloat((parseInt("" + normalizedColor[7] + normalizedColor[8], 16) / 255).toFixed(2));
    return {
      red: parseInt("" + normalizedColor[1] + normalizedColor[2], 16),
      green: parseInt("" + normalizedColor[3] + normalizedColor[4], 16),
      blue: parseInt("" + normalizedColor[5] + normalizedColor[6], 16),
      alpha
    };
  }
  if (normalizedColor.match(reducedHexRegex)) {
    return {
      red: parseInt("" + normalizedColor[1] + normalizedColor[1], 16),
      green: parseInt("" + normalizedColor[2] + normalizedColor[2], 16),
      blue: parseInt("" + normalizedColor[3] + normalizedColor[3], 16)
    };
  }
  if (normalizedColor.match(reducedRgbaHexRegex)) {
    var _alpha = parseFloat((parseInt("" + normalizedColor[4] + normalizedColor[4], 16) / 255).toFixed(2));
    return {
      red: parseInt("" + normalizedColor[1] + normalizedColor[1], 16),
      green: parseInt("" + normalizedColor[2] + normalizedColor[2], 16),
      blue: parseInt("" + normalizedColor[3] + normalizedColor[3], 16),
      alpha: _alpha
    };
  }
  var rgbMatched = rgbRegex.exec(normalizedColor);
  if (rgbMatched) {
    return {
      red: parseInt("" + rgbMatched[1], 10),
      green: parseInt("" + rgbMatched[2], 10),
      blue: parseInt("" + rgbMatched[3], 10)
    };
  }
  var rgbaMatched = rgbaRegex.exec(normalizedColor.substring(0, 50));
  if (rgbaMatched) {
    return {
      red: parseInt("" + rgbaMatched[1], 10),
      green: parseInt("" + rgbaMatched[2], 10),
      blue: parseInt("" + rgbaMatched[3], 10),
      alpha: parseFloat("" + rgbaMatched[4]) > 1 ? parseFloat("" + rgbaMatched[4]) / 100 : parseFloat("" + rgbaMatched[4])
    };
  }
  var hslMatched = hslRegex.exec(normalizedColor);
  if (hslMatched) {
    var hue = parseInt("" + hslMatched[1], 10);
    var saturation = parseInt("" + hslMatched[2], 10) / 100;
    var lightness = parseInt("" + hslMatched[3], 10) / 100;
    var rgbColorString = "rgb(" + hslToRgb(hue, saturation, lightness) + ")";
    var hslRgbMatched = rgbRegex.exec(rgbColorString);
    if (!hslRgbMatched) {
      throw new PolishedError(4, normalizedColor, rgbColorString);
    }
    return {
      red: parseInt("" + hslRgbMatched[1], 10),
      green: parseInt("" + hslRgbMatched[2], 10),
      blue: parseInt("" + hslRgbMatched[3], 10)
    };
  }
  var hslaMatched = hslaRegex.exec(normalizedColor.substring(0, 50));
  if (hslaMatched) {
    var _hue = parseInt("" + hslaMatched[1], 10);
    var _saturation = parseInt("" + hslaMatched[2], 10) / 100;
    var _lightness = parseInt("" + hslaMatched[3], 10) / 100;
    var _rgbColorString = "rgb(" + hslToRgb(_hue, _saturation, _lightness) + ")";
    var _hslRgbMatched = rgbRegex.exec(_rgbColorString);
    if (!_hslRgbMatched) {
      throw new PolishedError(4, normalizedColor, _rgbColorString);
    }
    return {
      red: parseInt("" + _hslRgbMatched[1], 10),
      green: parseInt("" + _hslRgbMatched[2], 10),
      blue: parseInt("" + _hslRgbMatched[3], 10),
      alpha: parseFloat("" + hslaMatched[4]) > 1 ? parseFloat("" + hslaMatched[4]) / 100 : parseFloat("" + hslaMatched[4])
    };
  }
  throw new PolishedError(5);
}
function rgbToHsl(color) {
  var red = color.red / 255;
  var green = color.green / 255;
  var blue = color.blue / 255;
  var max = Math.max(red, green, blue);
  var min = Math.min(red, green, blue);
  var lightness = (max + min) / 2;
  if (max === min) {
    if (color.alpha !== void 0) {
      return {
        hue: 0,
        saturation: 0,
        lightness,
        alpha: color.alpha
      };
    } else {
      return {
        hue: 0,
        saturation: 0,
        lightness
      };
    }
  }
  var hue;
  var delta = max - min;
  var saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);
  switch (max) {
    case red:
      hue = (green - blue) / delta + (green < blue ? 6 : 0);
      break;
    case green:
      hue = (blue - red) / delta + 2;
      break;
    default:
      hue = (red - green) / delta + 4;
      break;
  }
  hue *= 60;
  if (color.alpha !== void 0) {
    return {
      hue,
      saturation,
      lightness,
      alpha: color.alpha
    };
  }
  return {
    hue,
    saturation,
    lightness
  };
}
function parseToHsl(color) {
  return rgbToHsl(parseToRgb(color));
}
var reduceHexValue = function reduceHexValue2(value) {
  if (value.length === 7 && value[1] === value[2] && value[3] === value[4] && value[5] === value[6]) {
    return "#" + value[1] + value[3] + value[5];
  }
  return value;
};
var reduceHexValue$1 = reduceHexValue;
function numberToHex(value) {
  var hex = value.toString(16);
  return hex.length === 1 ? "0" + hex : hex;
}
function colorToHex(color) {
  return numberToHex(Math.round(color * 255));
}
function convertToHex(red, green, blue) {
  return reduceHexValue$1("#" + colorToHex(red) + colorToHex(green) + colorToHex(blue));
}
function hslToHex(hue, saturation, lightness) {
  return hslToRgb(hue, saturation, lightness, convertToHex);
}
function hsl(value, saturation, lightness) {
  if (typeof value === "number" && typeof saturation === "number" && typeof lightness === "number") {
    return hslToHex(value, saturation, lightness);
  } else if (typeof value === "object" && saturation === void 0 && lightness === void 0) {
    return hslToHex(value.hue, value.saturation, value.lightness);
  }
  throw new PolishedError(1);
}
function hsla(value, saturation, lightness, alpha) {
  if (typeof value === "number" && typeof saturation === "number" && typeof lightness === "number" && typeof alpha === "number") {
    return alpha >= 1 ? hslToHex(value, saturation, lightness) : "rgba(" + hslToRgb(value, saturation, lightness) + "," + alpha + ")";
  } else if (typeof value === "object" && saturation === void 0 && lightness === void 0 && alpha === void 0) {
    return value.alpha >= 1 ? hslToHex(value.hue, value.saturation, value.lightness) : "rgba(" + hslToRgb(value.hue, value.saturation, value.lightness) + "," + value.alpha + ")";
  }
  throw new PolishedError(2);
}
function rgb(value, green, blue) {
  if (typeof value === "number" && typeof green === "number" && typeof blue === "number") {
    return reduceHexValue$1("#" + numberToHex(value) + numberToHex(green) + numberToHex(blue));
  } else if (typeof value === "object" && green === void 0 && blue === void 0) {
    return reduceHexValue$1("#" + numberToHex(value.red) + numberToHex(value.green) + numberToHex(value.blue));
  }
  throw new PolishedError(6);
}
function rgba(firstValue, secondValue, thirdValue, fourthValue) {
  if (typeof firstValue === "string" && typeof secondValue === "number") {
    var rgbValue = parseToRgb(firstValue);
    return "rgba(" + rgbValue.red + "," + rgbValue.green + "," + rgbValue.blue + "," + secondValue + ")";
  } else if (typeof firstValue === "number" && typeof secondValue === "number" && typeof thirdValue === "number" && typeof fourthValue === "number") {
    return fourthValue >= 1 ? rgb(firstValue, secondValue, thirdValue) : "rgba(" + firstValue + "," + secondValue + "," + thirdValue + "," + fourthValue + ")";
  } else if (typeof firstValue === "object" && secondValue === void 0 && thirdValue === void 0 && fourthValue === void 0) {
    return firstValue.alpha >= 1 ? rgb(firstValue.red, firstValue.green, firstValue.blue) : "rgba(" + firstValue.red + "," + firstValue.green + "," + firstValue.blue + "," + firstValue.alpha + ")";
  }
  throw new PolishedError(7);
}
var isRgb = function isRgb2(color) {
  return typeof color.red === "number" && typeof color.green === "number" && typeof color.blue === "number" && (typeof color.alpha !== "number" || typeof color.alpha === "undefined");
};
var isRgba = function isRgba2(color) {
  return typeof color.red === "number" && typeof color.green === "number" && typeof color.blue === "number" && typeof color.alpha === "number";
};
var isHsl = function isHsl2(color) {
  return typeof color.hue === "number" && typeof color.saturation === "number" && typeof color.lightness === "number" && (typeof color.alpha !== "number" || typeof color.alpha === "undefined");
};
var isHsla = function isHsla2(color) {
  return typeof color.hue === "number" && typeof color.saturation === "number" && typeof color.lightness === "number" && typeof color.alpha === "number";
};
function toColorString(color) {
  if (typeof color !== "object")
    throw new PolishedError(8);
  if (isRgba(color))
    return rgba(color);
  if (isRgb(color))
    return rgb(color);
  if (isHsla(color))
    return hsla(color);
  if (isHsl(color))
    return hsl(color);
  throw new PolishedError(8);
}
function curried(f, length, acc) {
  return function fn() {
    var combined = acc.concat(Array.prototype.slice.call(arguments));
    return combined.length >= length ? f.apply(this, combined) : curried(f, length, combined);
  };
}
function curry(f) {
  return curried(f, f.length, []);
}
function adjustHue(degree, color) {
  if (color === "transparent")
    return color;
  var hslColor = parseToHsl(color);
  return toColorString(_extends({}, hslColor, {
    hue: hslColor.hue + parseFloat(degree)
  }));
}
var curriedAdjustHue = curry(adjustHue);
function guard(lowerBoundary, upperBoundary, value) {
  return Math.max(lowerBoundary, Math.min(upperBoundary, value));
}
function darken(amount, color) {
  if (color === "transparent")
    return color;
  var hslColor = parseToHsl(color);
  return toColorString(_extends({}, hslColor, {
    lightness: guard(0, 1, hslColor.lightness - parseFloat(amount))
  }));
}
var curriedDarken = curry(darken);
function desaturate(amount, color) {
  if (color === "transparent")
    return color;
  var hslColor = parseToHsl(color);
  return toColorString(_extends({}, hslColor, {
    saturation: guard(0, 1, hslColor.saturation - parseFloat(amount))
  }));
}
var curriedDesaturate = curry(desaturate);
function lighten(amount, color) {
  if (color === "transparent")
    return color;
  var hslColor = parseToHsl(color);
  return toColorString(_extends({}, hslColor, {
    lightness: guard(0, 1, hslColor.lightness + parseFloat(amount))
  }));
}
var curriedLighten = curry(lighten);
function mix(weight, color, otherColor) {
  if (color === "transparent")
    return otherColor;
  if (otherColor === "transparent")
    return color;
  if (weight === 0)
    return otherColor;
  var parsedColor1 = parseToRgb(color);
  var color1 = _extends({}, parsedColor1, {
    alpha: typeof parsedColor1.alpha === "number" ? parsedColor1.alpha : 1
  });
  var parsedColor2 = parseToRgb(otherColor);
  var color2 = _extends({}, parsedColor2, {
    alpha: typeof parsedColor2.alpha === "number" ? parsedColor2.alpha : 1
  });
  var alphaDelta = color1.alpha - color2.alpha;
  var x = parseFloat(weight) * 2 - 1;
  var y = x * alphaDelta === -1 ? x : x + alphaDelta;
  var z = 1 + x * alphaDelta;
  var weight1 = (y / z + 1) / 2;
  var weight2 = 1 - weight1;
  var mixedColor = {
    red: Math.floor(color1.red * weight1 + color2.red * weight2),
    green: Math.floor(color1.green * weight1 + color2.green * weight2),
    blue: Math.floor(color1.blue * weight1 + color2.blue * weight2),
    alpha: color1.alpha * parseFloat(weight) + color2.alpha * (1 - parseFloat(weight))
  };
  return rgba(mixedColor);
}
var curriedMix = curry(mix);
var mix$1 = curriedMix;
function opacify(amount, color) {
  if (color === "transparent")
    return color;
  var parsedColor = parseToRgb(color);
  var alpha = typeof parsedColor.alpha === "number" ? parsedColor.alpha : 1;
  var colorWithAlpha = _extends({}, parsedColor, {
    alpha: guard(0, 1, (alpha * 100 + parseFloat(amount) * 100) / 100)
  });
  return rgba(colorWithAlpha);
}
var curriedOpacify = curry(opacify);
function saturate(amount, color) {
  if (color === "transparent")
    return color;
  var hslColor = parseToHsl(color);
  return toColorString(_extends({}, hslColor, {
    saturation: guard(0, 1, hslColor.saturation + parseFloat(amount))
  }));
}
var curriedSaturate = curry(saturate);
function setHue(hue, color) {
  if (color === "transparent")
    return color;
  return toColorString(_extends({}, parseToHsl(color), {
    hue: parseFloat(hue)
  }));
}
var curriedSetHue = curry(setHue);
function setLightness(lightness, color) {
  if (color === "transparent")
    return color;
  return toColorString(_extends({}, parseToHsl(color), {
    lightness: parseFloat(lightness)
  }));
}
var curriedSetLightness = curry(setLightness);
function setSaturation(saturation, color) {
  if (color === "transparent")
    return color;
  return toColorString(_extends({}, parseToHsl(color), {
    saturation: parseFloat(saturation)
  }));
}
var curriedSetSaturation = curry(setSaturation);
function shade(percentage, color) {
  if (color === "transparent")
    return color;
  return mix$1(parseFloat(percentage), "rgb(0, 0, 0)", color);
}
var curriedShade = curry(shade);
function tint(percentage, color) {
  if (color === "transparent")
    return color;
  return mix$1(parseFloat(percentage), "rgb(255, 255, 255)", color);
}
var curriedTint = curry(tint);
function transparentize(amount, color) {
  if (color === "transparent")
    return color;
  var parsedColor = parseToRgb(color);
  var alpha = typeof parsedColor.alpha === "number" ? parsedColor.alpha : 1;
  var colorWithAlpha = _extends({}, parsedColor, {
    alpha: guard(0, 1, +(alpha * 100 - parseFloat(amount) * 100).toFixed(2) / 100)
  });
  return rgba(colorWithAlpha);
}
var curriedTransparentize = curry(transparentize);

// node_modules/@hover-design/react/src/styles/tokens/typography.ts
var baseFontSizeInPx = 16;
var fontEnlargementScale = 1.3;
var createScale = (ratio, base) => (steps) => `${modularScale(steps, base, ratio)}px`;
var fontSizeScale = createScale(fontEnlargementScale, baseFontSizeInPx);
var fontSizeVars = {
  "100": fontSizeScale(0),
  "200": fontSizeScale(1),
  "300": fontSizeScale(2),
  "400": fontSizeScale(3),
  "500": fontSizeScale(4),
  "600": fontSizeScale(5)
};

// node_modules/@hover-design/react/src/components/Input/Input.tsx
var import_jsx_runtime27 = __toESM(require_jsx_runtime());
var Input = ({
  className,
  style,
  statusBorder = lightColors.brand[400],
  Icon: Icon2,
  iconPosition = "right",
  ...props
}, ref) => {
  const paddingForIcon = {
    left: iconPosition === "left" && Icon2 ? "38px" : "14px",
    right: iconPosition === "right" && Icon2 ? "38px" : "14px"
  };
  return (0, import_jsx_runtime27.jsxs)("div", { className: inputWrapperClass, children: [
    Icon2 && iconPosition === "left" && (0, import_jsx_runtime27.jsx)(
      FlexWithRef,
      {
        className: `${iconWrapper} ${leftIconWrapper}`,
        alignItems: "center",
        justifyContent: "center",
        children: Icon2
      }
    ),
    (0, import_jsx_runtime27.jsx)(
      "input",
      {
        ref,
        style: {
          ...assignInlineVars({
            [inputThemeVars.borderColor]: statusBorder,
            [inputThemeVars.padding.left]: paddingForIcon.left,
            [inputThemeVars.padding.right]: paddingForIcon.right
          }),
          ...style
        },
        className: `${inputClass} ${inputThemeClass} ${className || ""}`,
        ...props
      }
    ),
    Icon2 && iconPosition === "right" && (0, import_jsx_runtime27.jsx)(
      FlexWithRef,
      {
        className: `${iconWrapper} ${rightIconWrapper}`,
        alignItems: "center",
        justifyContent: "center",
        children: Icon2
      }
    )
  ] });
};
var InputWithRef = import_react16.default.forwardRef(Input);

// node_modules/@hover-design/react/src/components/Input/index.ts
__reExport(Input_exports, input_styles_star);
import * as input_styles_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Input/input.styles.css.ts";

// node_modules/@hover-design/react/src/components/DateAndTime/DateTimePicker.tsx
var import_jsx_runtime28 = __toESM(require_jsx_runtime());
var DateTimePickerComponent = ({ type = "datetime-local", style, ...props }, ref) => {
  const dandtStyle = {
    width: "290px",
    borderRadius: "4px",
    padding: "8px"
  };
  Object.assign(dandtStyle, style);
  return (0, import_jsx_runtime28.jsx)(InputWithRef, { type, ...props, ref, style: dandtStyle });
};
var DateTimePickerWithRef = import_react17.default.forwardRef(DateTimePickerComponent);

// node_modules/@hover-design/react/src/components/Dialog/index.ts
var Dialog_exports = {};
__export(Dialog_exports, {
  Dialog: () => Dialog
});

// node_modules/@hover-design/react/src/components/Dialog/Dialog.tsx
var import_react20 = __toESM(require_react());

// node_modules/@hover-design/react/src/hooks/useClickOutside.tsx
var import_react18 = __toESM(require_react());
function useClickOutside(ref, handler, isCallbackEnabled = true) {
  (0, import_react18.useEffect)(() => {
    const listener = (event) => {
      const el = ref == null ? void 0 : ref.current;
      if (!el || el.contains(event.target)) {
        return;
      }
      isCallbackEnabled && handler(event);
    };
    document.addEventListener(`mousedown`, listener);
    document.addEventListener(`touchstart`, listener);
    return () => {
      document.removeEventListener(`mousedown`, listener);
      document.removeEventListener(`touchstart`, listener);
    };
  }, [ref, handler, isCallbackEnabled]);
}

// node_modules/@hover-design/react/src/components/Portal/Portal.tsx
var import_react19 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());
import { portalStyles } from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Portal/portal.style.css.ts";
var Portal = ({
  element = "dialog",
  role,
  children,
  className = "",
  style,
  id
}) => {
  const portalRoot = document.body;
  const mountElement = (0, import_react19.useMemo)(() => document.createElement(element), []);
  mountElement.setAttribute("open", "true");
  id && mountElement.setAttribute("id", id);
  role && mountElement.setAttribute("role", role);
  mountElement.setAttribute("class", `${portalStyles} ${className}`);
  style && Object.assign(mountElement.style, style);
  (0, import_react19.useEffect)(() => {
    portalRoot.appendChild(mountElement);
    return () => {
      portalRoot.removeChild(mountElement);
    };
  }, [mountElement, portalRoot]);
  return (0, import_react_dom.createPortal)(children, mountElement);
};

// node_modules/@hover-design/react/src/components/Dialog/Dialog.tsx
var import_jsx_runtime29 = __toESM(require_jsx_runtime());
import {
  dialogCloseStyleClass,
  dialogContentContainer,
  dialogStyleClass,
  dialogThemeClass,
  dialogThemeVars
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Dialog/dialog.styles.css.ts";
var Dialog = ({
  children,
  styles,
  closeOnClickOutside = false,
  isCloseIconVisible = true,
  onClose,
  isOpen,
  className,
  style,
  ...nativeProps
}) => {
  const dialogSurfaceRef = (0, import_react20.useRef)(null);
  const customStyles = assignInlineVars(
    eliminateUndefinedKeys({
      [dialogThemeVars.backgroundColor]: styles == null ? void 0 : styles.backgroundColor,
      [dialogThemeVars.borderRadius]: styles == null ? void 0 : styles.borderRadius,
      [dialogThemeVars.width]: styles == null ? void 0 : styles.width,
      [dialogThemeVars.height]: styles == null ? void 0 : styles.height,
      [dialogThemeVars.top]: styles == null ? void 0 : styles.top,
      [dialogThemeVars.left]: styles == null ? void 0 : styles.left,
      [dialogThemeVars.right]: styles == null ? void 0 : styles.right,
      [dialogThemeVars.bottom]: styles == null ? void 0 : styles.bottom,
      [dialogThemeVars.transform]: styles == null ? void 0 : styles.transform,
      [dialogThemeVars.position]: styles == null ? void 0 : styles.position,
      [dialogThemeVars.padding]: styles == null ? void 0 : styles.padding,
      [dialogThemeVars.zIndex]: styles == null ? void 0 : styles.zIndex,
      [dialogThemeVars.boxShadow]: styles == null ? void 0 : styles.boxShadow
    })
  );
  if (closeOnClickOutside) {
    useClickOutside(dialogSurfaceRef, onClose);
  }
  if (isOpen === false) {
    return null;
  }
  return (0, import_jsx_runtime29.jsx)(Portal, { children: (0, import_jsx_runtime29.jsxs)(
    "div",
    {
      ref: dialogSurfaceRef,
      style: { ...customStyles, ...style },
      className: `${dialogStyleClass} ${dialogThemeClass} ${className}`,
      ...nativeProps,
      children: [
        isCloseIconVisible && (0, import_jsx_runtime29.jsx)("button", { className: dialogCloseStyleClass, onClick: onClose, children: (0, import_jsx_runtime29.jsx)(Close_default, { height: "16", width: "16" }) }),
        (0, import_jsx_runtime29.jsx)("div", { className: dialogContentContainer, children })
      ]
    }
  ) });
};

// node_modules/@hover-design/react/src/components/Dialog/index.ts
__reExport(Dialog_exports, dialog_styles_star);
import * as dialog_styles_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Dialog/dialog.styles.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Dialog_exports);

// node_modules/@hover-design/react/src/components/Divider/index.ts
var Divider_exports = {};
__export(Divider_exports, {
  Divider: () => Divider
});

// node_modules/@hover-design/react/src/components/Divider/Divider.tsx
var import_jsx_runtime30 = __toESM(require_jsx_runtime());
import {
  dividerContainerHorizontal,
  dividerContainerVertical,
  dividerHorizontal,
  dividerThemeVar,
  dividerVertical,
  labelHorizontal,
  labelVertical
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Divider/divider.css.ts";
var Divider = ({
  type = "solid",
  label,
  labelPosition = "center",
  color = "grey",
  labelColor = "#000",
  labelBackground = "#fff",
  orientation = "horizontal",
  className,
  style,
  size = "1px",
  minHeight = "40px",
  minWidth = "40px",
  ...nativeProps
}) => {
  const dividerClass = orientation === "horizontal" ? dividerHorizontal({
    type
  }) : dividerVertical({
    type
  });
  const labelClass2 = orientation === "horizontal" ? labelHorizontal({
    labelPosition
  }) : labelVertical({
    labelPosition
  });
  const dividerStyles = assignInlineVars({
    [dividerThemeVar.dividerColor]: color,
    [dividerThemeVar.dividerSize]: size,
    [dividerThemeVar.dividerStyleMinHeight]: minHeight,
    [dividerThemeVar.dividerStyleMinWidth]: minWidth
  });
  Object.assign(dividerStyles, style);
  return (0, import_jsx_runtime30.jsxs)(
    "div",
    {
      className: `${orientation === "horizontal" ? dividerContainerHorizontal : dividerContainerVertical}`,
      children: [
        (0, import_jsx_runtime30.jsx)(
          "hr",
          {
            className: `${dividerClass} ${className}`,
            style: dividerStyles,
            ...nativeProps
          }
        ),
        label && (0, import_jsx_runtime30.jsx)(
          "span",
          {
            style: assignInlineVars({
              [dividerThemeVar.labelColor]: labelColor,
              [dividerThemeVar.labelBackground]: typeof label === "string" ? labelBackground : "transparent"
            }),
            className: `${labelClass2}`,
            children: label
          }
        )
      ]
    }
  );
};

// node_modules/@hover-design/react/src/components/Divider/index.ts
__reExport(Divider_exports, divider_star);
import * as divider_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Divider/divider.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Divider_exports);

// node_modules/@hover-design/react/src/components/Grid/Grid.tsx
var import_react21 = __toESM(require_react());
var import_jsx_runtime31 = __toESM(require_jsx_runtime());
var GridComponent = ({
  gap,
  columnGap,
  rowGap,
  gridTemplateColumns,
  gridTemplateRows,
  gridTemplateAreas,
  gridAutoColumns,
  gridAutoRows,
  gridAutoFlow,
  grid,
  gridArea,
  gridColumn,
  gridColumnStart,
  gridColumnEnd,
  gridRow,
  gridRowStart,
  gridRowEnd,
  gridTemplate,
  justifyItems,
  alignItems,
  placeItems,
  justifyContent,
  alignContent,
  display = "grid",
  children,
  style,
  ...nativeProps
}, ref) => {
  const gridStyles = assignInlineVars(
    eliminateUndefinedKeys({
      gap,
      columnGap,
      rowGap,
      gridTemplateColumns,
      gridTemplateRows,
      gridTemplateAreas,
      gridAutoColumns,
      gridAutoRows,
      gridAutoFlow,
      grid,
      gridArea,
      gridColumn,
      gridColumnStart,
      gridColumnEnd,
      gridRow,
      gridRowStart,
      gridRowEnd,
      gridTemplate,
      justifyItems,
      alignItems,
      placeItems,
      justifyContent,
      alignContent,
      display
    })
  );
  Object.assign(gridStyles, style);
  return (0, import_jsx_runtime31.jsx)("div", { style: gridStyles, ...nativeProps, ref, children });
};
var GridWithRef = import_react21.default.forwardRef(GridComponent);

// node_modules/@hover-design/react/src/components/HoverProvider/HoverProvider.tsx
var import_react22 = __toESM(require_react());
var import_jsx_runtime32 = __toESM(require_jsx_runtime());
var HoverContext = (0, import_react22.createContext)({ theme: void 0 });
var HoverProvider = ({
  value,
  children
}) => {
  return (0, import_jsx_runtime32.jsx)(HoverContext.Provider, { value, children });
};
var useHoverTheme = () => {
  const { theme } = (0, import_react22.useContext)(HoverContext);
  return { theme };
};

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Input_exports);

// node_modules/@hover-design/react/src/components/Label/index.ts
var Label_exports = {};
__export(Label_exports, {
  Label: () => LabelWithRef
});

// node_modules/@hover-design/react/src/components/Label/Label.tsx
var import_react23 = __toESM(require_react());
var import_jsx_runtime33 = __toESM(require_jsx_runtime());
import { labelClass } from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Label/label.styles.css.ts";
var Label = ({ children, ...props }, ref) => {
  return (0, import_jsx_runtime33.jsx)("label", { className: labelClass, ref, ...props, children });
};
var LabelWithRef = import_react23.default.forwardRef(Label);

// node_modules/@hover-design/react/src/components/Label/index.ts
__reExport(Label_exports, label_styles_star);
import * as label_styles_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Label/label.styles.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Label_exports);

// node_modules/@hover-design/react/src/components/List/index.ts
var List_exports = {};
__export(List_exports, {
  List: () => ListWithRef,
  ListItem: () => ListItemWithRef
});

// node_modules/@hover-design/react/src/components/List/List.tsx
var import_react24 = __toESM(require_react());
import { listStyles, listThemeVars, listThemeClass } from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/List/list.css.ts";
var import_jsx_runtime34 = __toESM(require_jsx_runtime());
var ListComponent = ({ children, variant, type, ...props }, ref) => {
  const listStyle = listStyles({
    variant
  });
  return (0, import_jsx_runtime34.jsx)(
    "ul",
    {
      style: assignInlineVars({
        [listThemeVars.listStyles.listStyleType]: type || "disc"
      }),
      className: `${listStyle} ${listThemeClass} ${props.className || ""}`,
      ref,
      ...props,
      children
    }
  );
};
var ListWithRef = import_react24.default.forwardRef(ListComponent);

// node_modules/@hover-design/react/src/components/List/index.ts
__reExport(List_exports, list_star);
import * as list_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/List/list.css.ts";

// node_modules/@hover-design/react/src/components/List/ListItem/ListItem.tsx
var import_react25 = __toESM(require_react());
var import_jsx_runtime35 = __toESM(require_jsx_runtime());
var ListItemComponent = ({ children, ...props }, ref) => {
  return (0, import_jsx_runtime35.jsx)("li", { className: `${(props == null ? void 0 : props.className) || ""}`, ref, ...props, children });
};
var ListItemWithRef = import_react25.default.forwardRef(ListItemComponent);

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, List_exports);

// node_modules/@hover-design/react/src/components/Loader/index.ts
var Loader_exports = {};
__export(Loader_exports, {
  Loader: () => Loader,
  Spinner: () => Spinner
});

// node_modules/@hover-design/react/src/components/Loader/Loader.tsx
var import_react27 = __toESM(require_react());

// node_modules/@hover-design/react/src/components/Loader/Spinner/Spinner.tsx
var import_react26 = __toESM(require_react());
var import_jsx_runtime36 = __toESM(require_jsx_runtime());
import { spinnerStyle } from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Loader/Spinner/spinner.styles.css.ts";
var SpinnerComponent = ({
  color = "#408FEC",
  size = 30,
  thickness,
  dashLength,
  isRoundedDash = false,
  ...props
}, ref) => {
  const [internalLength, setInternalLength] = (0, import_react26.useState)(0);
  const viewBox = `0 0 ${size} ${size}`;
  const internalThickness = thickness || size / 5;
  const radius = (size - internalThickness) / 2;
  const circumference = 2 * radius * Math.PI;
  (0, import_react26.useEffect)(() => {
    dashLength && typeof dashLength === "number" ? setInternalLength(dashLength) : setInternalLength(circumference / 4);
  }, [dashLength, size]);
  return (0, import_jsx_runtime36.jsxs)("svg", { width: size, height: size, viewBox, ref, ...props, children: [
    (0, import_jsx_runtime36.jsx)(
      "circle",
      {
        fill: "none",
        stroke: "#E5E9F2",
        cx: size / 2,
        cy: size / 2,
        r: radius,
        strokeWidth: internalThickness
      }
    ),
    (0, import_jsx_runtime36.jsx)(
      "circle",
      {
        className: spinnerStyle,
        fill: "none",
        stroke: color,
        cx: size / 2,
        cy: size / 2,
        r: radius,
        strokeWidth: internalThickness,
        strokeDasharray: `${internalLength},${circumference - internalLength}`,
        strokeLinecap: isRoundedDash ? "round" : "butt"
      }
    )
  ] });
};
var Spinner = (0, import_react26.forwardRef)(SpinnerComponent);

// node_modules/@hover-design/react/src/components/Loader/Loader.tsx
var import_jsx_runtime37 = __toESM(require_jsx_runtime());
var LoaderComponent = ({ variant = "spinner", ...props }, ref) => {
  return (0, import_jsx_runtime37.jsx)(Spinner, { ...props, ref });
};
var Loader = (0, import_react27.forwardRef)(LoaderComponent);

// node_modules/@hover-design/react/src/components/Loader/index.ts
__reExport(Loader_exports, spinner_styles_star);
import * as spinner_styles_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Loader/Spinner/spinner.styles.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Loader_exports);

// node_modules/@hover-design/react/src/components/Modal/index.ts
var Modal_exports = {};
__export(Modal_exports, {
  Modal: () => Modal
});

// node_modules/@hover-design/react/src/components/Modal/Modal.tsx
var import_react28 = __toESM(require_react());
var import_jsx_runtime38 = __toESM(require_jsx_runtime());
import {
  modalCloseStyleClass,
  modalHeaderStyleClass,
  modalStyleClass,
  modalThemeClass,
  modalThemeVars,
  modalTitleStyleClass,
  overlayStyleClass
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Modal/modal.styles.css.ts";
var Modal = ({
  children,
  isOpen,
  onClose,
  title,
  closeOnClickOutside = true,
  isCloseIconVisible = true,
  baseStyles,
  overlayStyles,
  showOverlay = true,
  style,
  className,
  ...nativeProps
}) => {
  const modalSurfaceRef = import_react28.default.useRef(null);
  if (closeOnClickOutside) {
    useClickOutside(modalSurfaceRef, onClose);
  }
  const customStyles = assignInlineVars(
    eliminateUndefinedKeys({
      [modalThemeVars.base.backgroundColor]: baseStyles == null ? void 0 : baseStyles.backgroundColor,
      [modalThemeVars.base.borderRadius]: baseStyles == null ? void 0 : baseStyles.borderRadius,
      [modalThemeVars.base.width]: baseStyles == null ? void 0 : baseStyles.width,
      [modalThemeVars.base.height]: baseStyles == null ? void 0 : baseStyles.height,
      [modalThemeVars.base.top]: baseStyles == null ? void 0 : baseStyles.top,
      [modalThemeVars.base.left]: baseStyles == null ? void 0 : baseStyles.left,
      [modalThemeVars.base.right]: baseStyles == null ? void 0 : baseStyles.right,
      [modalThemeVars.base.bottom]: baseStyles == null ? void 0 : baseStyles.bottom,
      [modalThemeVars.base.transform]: baseStyles == null ? void 0 : baseStyles.transform,
      [modalThemeVars.base.position]: baseStyles == null ? void 0 : baseStyles.position,
      [modalThemeVars.base.padding]: baseStyles == null ? void 0 : baseStyles.padding,
      [modalThemeVars.base.zIndex]: baseStyles == null ? void 0 : baseStyles.zIndex,
      [modalThemeVars.base.boxShadow]: baseStyles == null ? void 0 : baseStyles.boxShadow,
      [modalThemeVars.overlay.backgroundColor]: overlayStyles == null ? void 0 : overlayStyles.backgroundColor,
      [modalThemeVars.overlay.zIndex]: overlayStyles == null ? void 0 : overlayStyles.zIndex,
      [modalThemeVars.overlay.opacity]: overlayStyles == null ? void 0 : overlayStyles.opacity,
      [modalThemeVars.overlay.top]: overlayStyles == null ? void 0 : overlayStyles.top,
      [modalThemeVars.overlay.left]: overlayStyles == null ? void 0 : overlayStyles.left,
      [modalThemeVars.overlay.right]: overlayStyles == null ? void 0 : overlayStyles.right,
      [modalThemeVars.overlay.bottom]: overlayStyles == null ? void 0 : overlayStyles.bottom,
      [modalThemeVars.overlay.filter]: overlayStyles == null ? void 0 : overlayStyles.filter
    })
  );
  if (isOpen === false) {
    return null;
  }
  return (0, import_jsx_runtime38.jsx)(Portal, { children: (0, import_jsx_runtime38.jsxs)("div", { style: customStyles, className: modalThemeClass, children: [
    showOverlay && (0, import_jsx_runtime38.jsx)("div", { className: overlayStyleClass }),
    (0, import_jsx_runtime38.jsxs)(
      "div",
      {
        ref: modalSurfaceRef,
        style,
        className: `${modalStyleClass} ${className}`,
        ...nativeProps,
        children: [
          (0, import_jsx_runtime38.jsxs)("div", { className: modalHeaderStyleClass, children: [
            !!title && (0, import_jsx_runtime38.jsx)("p", { className: modalTitleStyleClass, children: title }),
            isCloseIconVisible && (0, import_jsx_runtime38.jsx)("button", { className: modalCloseStyleClass, onClick: onClose, children: (0, import_jsx_runtime38.jsx)(Close_default, { height: "16", width: "16" }) })
          ] }),
          children
        ]
      }
    )
  ] }) });
};

// node_modules/@hover-design/react/src/components/Modal/index.ts
__reExport(Modal_exports, modal_styles_star);
import * as modal_styles_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Modal/modal.styles.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Modal_exports);

// node_modules/@hover-design/react/src/components/NativeSelect/index.ts
var NativeSelect_exports = {};
__export(NativeSelect_exports, {
  NativeSelect: () => NativeSelect
});

// node_modules/@hover-design/react/src/components/NativeSelect/NativeSelect.tsx
var import_jsx_runtime39 = __toESM(require_jsx_runtime());
import {
  nativeSelectContainerStyles,
  nativeSelectErrorMsg,
  nativeSelectIconStyle,
  nativeSelectRecipe,
  nativeSelectVars
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/NativeSelect/nativeSelect.css.ts";
var NativeSelect = ({
  height = "fit-content",
  width = "fit-content",
  borderRadius = "0",
  options,
  error = false,
  className,
  style = {},
  multiple,
  ...nativeProps
}) => {
  const nativeSelectClass = nativeSelectRecipe({
    error: error ? true : false,
    isMulti: multiple ? true : false
  });
  return (0, import_jsx_runtime39.jsxs)(FlexWithRef, { flexDirection: "column", children: [
    (0, import_jsx_runtime39.jsxs)(
      "div",
      {
        className: nativeSelectContainerStyles,
        style: assignInlineVars({
          [nativeSelectVars.height]: height,
          [nativeSelectVars.width]: width,
          [nativeSelectVars.borderRadius]: borderRadius
        }),
        children: [
          (0, import_jsx_runtime39.jsx)(
            "select",
            {
              style,
              className: `${nativeSelectClass} ${className}`,
              multiple,
              ...nativeProps,
              children: options.map((option, index) => (0, import_jsx_runtime39.jsx)("option", { disabled: option.disabled, value: option.value, children: option.label }, index))
            }
          ),
          !multiple && (0, import_jsx_runtime39.jsx)(FlexWithRef, { className: nativeSelectIconStyle, alignItems: "center", children: (0, import_jsx_runtime39.jsx)(ArrowDown, { width: 18, height: 18 }) })
        ]
      }
    ),
    error && typeof error !== "boolean" && (0, import_jsx_runtime39.jsx)("span", { className: nativeSelectErrorMsg, children: error })
  ] });
};

// node_modules/@hover-design/react/src/components/NativeSelect/index.ts
__reExport(NativeSelect_exports, nativeSelect_star);
import * as nativeSelect_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/NativeSelect/nativeSelect.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, NativeSelect_exports);

// node_modules/@hover-design/react/src/components/Popover/index.ts
var Popover_exports = {};
__export(Popover_exports, {
  Popover: () => Popover
});

// node_modules/@hover-design/react/src/components/Popover/Popover.tsx
var import_react29 = __toESM(require_react());

// node_modules/@hover-design/react/src/components/_internal/Constants/constants.ts
var focusableElements = 'button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])';

// node_modules/@hover-design/react/src/hooks/useTrapFocus.tsx
var useTrapFocus = (e, ref) => {
  const firstFocusableElement = ref.current.querySelectorAll(
    focusableElements
  )[0];
  const focusableContent = ref.current.querySelectorAll(focusableElements);
  const lastFocusableElement = focusableContent[focusableContent.length - 1];
  const isTabPressed = e.key === "Tab";
  if (!isTabPressed) {
    return;
  }
  if (e.shiftKey) {
    if (document.activeElement === firstFocusableElement) {
      lastFocusableElement.focus();
      e.preventDefault();
    }
  } else {
    if (document.activeElement === lastFocusableElement) {
      firstFocusableElement.focus();
      e.preventDefault();
    }
  }
};

// node_modules/@hover-design/react/src/components/Popover/Popover.tsx
var import_jsx_runtime40 = __toESM(require_jsx_runtime());
import {
  contentRecipe,
  popArrowOffset,
  popArrowSize,
  popOffset,
  popoverContainerStyles,
  popRadius,
  popWidth
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Popover/popover.styles.css.ts";
var PopoverComponent = ({
  children,
  position = "bottom",
  content,
  offset = "4px",
  borderRadius = "4px",
  width = "fit-content",
  withArrow = false,
  arrowSize = "7px",
  isOpened,
  onChange = () => {
  },
  className,
  style,
  zIndex = "1",
  trapFocus = false
}, ref) => {
  const [isOpen, setIsOpen] = (0, import_react29.useState)(null);
  const [targetWidth, setTargetWidth] = (0, import_react29.useState)("");
  const popRef = (0, import_react29.useRef)();
  const contentRef = (0, import_react29.useRef)();
  const targetRef = (0, import_react29.useRef)();
  (0, import_react29.useEffect)(() => {
    isOpened !== void 0 && setIsOpen(isOpened);
  }, [isOpened]);
  (0, import_react29.useEffect)(() => {
    isOpen !== null && onChange(isOpen);
  }, [isOpen]);
  (0, import_react29.useEffect)(() => {
    if (width === "target") {
      setTargetWidth(getTargetWidth());
    } else {
      setTargetWidth(width);
    }
  }, [width, targetRef.current]);
  useClickOutside(
    popRef,
    () => {
      isOpened === void 0 && setIsOpen(false);
    },
    isOpen || false
  );
  const internalClickHandler = () => {
    isOpened === void 0 && setIsOpen(!isOpen);
  };
  const internalKeyDownHandler = (event) => {
    switch (event.code) {
      case "Space":
      case "Enter":
        event.preventDefault();
        internalClickHandler();
        break;
      case "Escape":
        event.preventDefault();
        isOpened === void 0 && setIsOpen(false);
        break;
      default:
        break;
    }
  };
  const InternalContentKeyDownHandler = (event) => {
    trapFocus && useTrapFocus(event, contentRef);
  };
  const getTargetWidth = () => {
    var _a;
    return `${(_a = targetRef == null ? void 0 : targetRef.current) == null ? void 0 : _a.offsetWidth}px`;
  };
  const contentContainerStyles = contentRecipe({
    position,
    withArrow: withArrow ? true : false
  });
  return (0, import_jsx_runtime40.jsxs)(
    "div",
    {
      className: popoverContainerStyles,
      ref: popRef,
      style: assignInlineVars({
        [popOffset]: withArrow ? `${Math.hypot(parseInt(arrowSize) + 4) / 2 + parseInt(offset)}px` : offset,
        [popRadius]: borderRadius,
        [popWidth]: targetWidth,
        [popArrowSize]: arrowSize,
        [popArrowOffset]: `-${Math.hypot(parseInt(arrowSize) + 2) / 2}px`
      }),
      children: [
        (0, import_jsx_runtime40.jsx)(
          "div",
          {
            ref: targetRef,
            className: "hover-popover-target",
            onClick: internalClickHandler,
            onKeyDown: internalKeyDownHandler,
            children
          }
        ),
        isOpen && (0, import_jsx_runtime40.jsx)(
          "div",
          {
            "aria-expanded": isOpen,
            role: "dialog",
            ref: (node) => {
              contentRef.current = node;
              if (typeof ref === "function") {
                ref(node);
              } else if (ref) {
                ref.current = node;
              }
            },
            style: {
              ...assignInlineVars({
                zIndex
              }),
              ...style
            },
            onKeyDown: InternalContentKeyDownHandler,
            className: `${contentContainerStyles} ${className}`,
            children: content
          }
        )
      ]
    }
  );
};
var Popover = (0, import_react29.forwardRef)(PopoverComponent);

// node_modules/@hover-design/react/src/components/Popover/index.ts
__reExport(Popover_exports, popover_styles_star);
import * as popover_styles_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Popover/popover.styles.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Popover_exports);

// node_modules/@hover-design/react/src/components/Portal/index.ts
var Portal_exports = {};
__export(Portal_exports, {
  Portal: () => Portal
});
__reExport(Portal_exports, portal_style_star);
import * as portal_style_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Portal/portal.style.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Portal_exports);

// node_modules/@hover-design/react/src/components/Progress/index.ts
var Progress_exports = {};
__export(Progress_exports, {
  Progress: () => Progress
});

// node_modules/@hover-design/react/src/components/Progress/Progress.tsx
import {
  progressContainerStyle,
  progressRadiusMap,
  progressSizes,
  progressStyle,
  progressThemeClass,
  progressThemeVars
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Progress/progress.styles.css.ts";
var import_jsx_runtime41 = __toESM(require_jsx_runtime());
var Progress = ({
  value,
  progressBaseStyles,
  progressBaseClassName,
  radius,
  size,
  progressColor,
  className,
  style
}) => {
  const assignVariables = assignInlineVars(
    eliminateUndefinedKeys({
      [progressThemeVars.progressStyleSize]: progressSizes[size || ""] || size,
      [progressThemeVars.radius]: progressRadiusMap[radius || ""] || radius,
      [progressThemeVars.progressColor]: progressColor,
      [progressThemeVars.progressValue]: `${value}%`
    })
  );
  return (0, import_jsx_runtime41.jsx)(
    "div",
    {
      style: { ...assignVariables, ...progressBaseStyles || {} },
      className: `${progressThemeClass} ${progressContainerStyle} ${progressBaseClassName || ""}`,
      children: (0, import_jsx_runtime41.jsx)(
        "div",
        {
          role: "progressbar",
          className: `${progressStyle} ${className}`,
          style: { ...assignVariables, ...style || {} }
        }
      )
    }
  );
};

// node_modules/@hover-design/react/src/components/Progress/index.ts
__reExport(Progress_exports, progress_styles_star);
import * as progress_styles_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Progress/progress.styles.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Progress_exports);

// node_modules/@hover-design/react/src/components/Radio/index.ts
var Radio_exports = {};
__export(Radio_exports, {
  Radio: () => RadioWithRef,
  RadioGroup: () => RadioGroupWithRef
});

// node_modules/@hover-design/react/src/components/Radio/Radio.tsx
var import_react30 = __toESM(require_react());
import {
  radioWrapperClass,
  radioCheckMarkClass,
  radioThemeVars,
  radioSizes,
  radioThemeClass
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Radio/radio.styles.css.ts";
import "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Radio/radio.global.styles.css.ts";

// node_modules/@hover-design/react/src/utils/access-defined-values/access-defined-values.ts
var accessDefinedValues = (value, definitionObject) => {
  const keys = Object.keys(definitionObject);
  if (value && keys.includes(value)) {
    return definitionObject[value];
  } else {
    return value;
  }
};

// node_modules/@hover-design/react/src/components/Radio/Radio.tsx
var import_jsx_runtime42 = __toESM(require_jsx_runtime());
var Radio = ({
  className,
  style,
  value,
  name,
  checked,
  radioSize,
  baseStyles,
  disabledStyles,
  selectedStyles,
  isDisabled = false,
  ...nativeProps
}, ref) => {
  const assignVariables = assignInlineVars(
    eliminateUndefinedKeys({
      [radioThemeVars.radioStyleSize]: accessDefinedValues(
        radioSize,
        radioSizes
      ),
      [radioThemeVars.baseStyles.backgroundColor]: baseStyles == null ? void 0 : baseStyles.backgroundColor,
      [radioThemeVars.baseStyles.borderColor]: baseStyles == null ? void 0 : baseStyles.borderColor,
      [radioThemeVars.selectedStyles.backgroundColor]: selectedStyles == null ? void 0 : selectedStyles.backgroundColor,
      [radioThemeVars.selectedStyles.borderColor]: selectedStyles == null ? void 0 : selectedStyles.borderColor,
      [radioThemeVars.selectedStyles.color]: selectedStyles == null ? void 0 : selectedStyles.color,
      [radioThemeVars.disabledStyles.backgroundColor]: disabledStyles == null ? void 0 : disabledStyles.backgroundColor,
      [radioThemeVars.disabledStyles.borderColor]: disabledStyles == null ? void 0 : disabledStyles.borderColor
    })
  );
  return (0, import_jsx_runtime42.jsxs)(
    "div",
    {
      className: `${radioWrapperClass} ${radioThemeClass} ${className || ""}`,
      style: { ...assignVariables, ...style || {} },
      children: [
        (0, import_jsx_runtime42.jsx)(
          "input",
          {
            ...nativeProps,
            ref,
            type: "radio",
            value,
            name,
            checked,
            disabled: isDisabled
          }
        ),
        (0, import_jsx_runtime42.jsx)(
          "div",
          {
            "aria-hidden": "true",
            className: radioCheckMarkClass,
            "data-checked": checked ? "true" : "false",
            "data-disabled": isDisabled ? "true" : "false",
            children: checked ? (0, import_jsx_runtime42.jsx)(SvgDot, {}) : null
          }
        )
      ]
    }
  );
};
var RadioWithRef = import_react30.default.forwardRef(Radio);

// node_modules/@hover-design/react/src/components/Radio/index.ts
__reExport(Radio_exports, radio_styles_star);
import * as radio_styles_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Radio/radio.styles.css.ts";

// node_modules/@hover-design/react/src/components/Radio/RadioGroup/RadioGroup.tsx
var import_react31 = __toESM(require_react());
var import_jsx_runtime43 = __toESM(require_jsx_runtime());
import { radioGroupChildClass, radioGroupSpacing } from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Radio/radio.styles.css.ts";
var RadioGroup = ({
  children,
  className,
  style,
  spacing = "xs",
  orientation = "horizontal",
  ...nativeProps
}, ref) => {
  return (0, import_jsx_runtime43.jsx)(
    FlexWithRef,
    {
      flexDirection: orientation === "horizontal" ? "row" : "column",
      ref,
      gap: radioGroupSpacing[spacing],
      className: ` ${orientation === "vertical" ? radioGroupChildClass : ""} ${className || ""}`,
      style: { ...style || {} },
      ...nativeProps,
      children
    }
  );
};
var RadioGroupWithRef = import_react31.default.forwardRef(RadioGroup);

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Radio_exports);

// node_modules/@hover-design/react/src/components/reset/index.ts
var reset_exports = {};
__reExport(reset_exports, reset_star);
import * as reset_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/reset/reset.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, reset_exports);

// node_modules/@hover-design/react/src/components/Select/index.ts
var Select_exports = {};
__export(Select_exports, {
  Pill: () => Pill,
  Select: () => Select
});

// node_modules/@hover-design/react/src/components/Select/Select.tsx
var import_react32 = __toESM(require_react());

// node_modules/@hover-design/react/src/components/Select/Pill/Pill.tsx
import { pillIconStyles, pillStyles } from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Select/Pill/pill.css.ts";
var import_jsx_runtime44 = __toESM(require_jsx_runtime());
var Pill = ({ clearValue, value }) => {
  return (0, import_jsx_runtime44.jsxs)(FlexWithRef, { className: pillStyles, alignItems: "center", gap: "6px", children: [
    (0, import_jsx_runtime44.jsx)("span", { children: value }),
    (0, import_jsx_runtime44.jsx)(
      Clear,
      {
        className: pillIconStyles,
        width: 14,
        height: 14,
        onClick: (event) => {
          event.stopPropagation();
          clearValue(event);
        }
      }
    )
  ] });
};

// node_modules/@hover-design/react/src/components/Select/Select.tsx
import {
  selectContainerStyles,
  selectErrorMsg,
  selectIconRecipe,
  selectInputRecipe,
  selectListContainerStyle,
  selectListRecipe,
  selectVars,
  inputTextContainer,
  noDataFoundStyles,
  selectInputElementRecipe,
  inputRecipe,
  loadingContentContainer
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Select/select.css.ts";
import "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Select/select.global.styles.css.ts";
var import_jsx_runtime45 = __toESM(require_jsx_runtime());
var SelectComponent = ({
  placeholder,
  options,
  value,
  width = "100%",
  borderRadius = "0",
  color = "#2F80ED",
  maxDropDownHeight = "200px",
  minHeight = "42px",
  onChange,
  isSearchable = false,
  isClearable = false,
  isDisabled = false,
  isMulti = false,
  DropIcon,
  error = false,
  nothingFoundLabel,
  className,
  style,
  onDropDownClose,
  onDropDownOpen,
  isLoading = false,
  loadingOptions,
  useDropdownPortal = false,
  closeDropdownPortalOnScroll = false,
  zIndex = "300",
  useSerialSearch = false
}, ref) => {
  const [selectValue, setSelectValue] = (0, import_react32.useState)(null);
  const [isDropped, setIsDropped] = (0, import_react32.useState)(false);
  const [internalOptions, setInternalOptions] = (0, import_react32.useState)(options);
  const [searchText, setSearchText] = (0, import_react32.useState)("");
  const selectRef = (0, import_react32.useRef)();
  const inputRef = (0, import_react32.useRef)();
  const optionsListRef = (0, import_react32.useRef)();
  const [cursor, setCursor] = (0, import_react32.useState)(-1);
  (0, import_react32.useEffect)(() => {
    if (value !== void 0) {
      setSelectValue(value);
    }
  }, [value]);
  (0, import_react32.useEffect)(() => {
    if (isMulti) {
      Array.isArray(selectValue) ? setInternalOptions(
        options == null ? void 0 : options.filter(
          (option) => !selectValue.find((data) => data.value === option.value)
        )
      ) : setInternalOptions(options);
    } else {
      setInternalOptions(options);
      selectValue ? !Array.isArray(selectValue) && setSearchText(selectValue == null ? void 0 : selectValue.label) : setSearchText("");
    }
  }, [selectValue, isMulti, options]);
  (0, import_react32.useEffect)(() => {
    focusElement(cursor);
  }, [cursor]);
  (0, import_react32.useEffect)(() => {
    var _a, _b;
    if (Array.isArray(internalOptions)) {
      let skipCount = cursor;
      while ((_a = internalOptions[skipCount]) == null ? void 0 : _a.disabled) {
        skipCount++;
      }
      skipCount < internalOptions.length && !((_b = internalOptions[skipCount]) == null ? void 0 : _b.disabled) && setCursor(skipCount);
      internalOptions.every((option) => option.disabled) && blurAllElements();
    }
  }, [internalOptions]);
  (0, import_react32.useEffect)(() => {
    useDropdownPortal ? applyDropDownPortalPosition() : applyDropDownPosition();
  }, [inputRef, useDropdownPortal, optionsListRef, isDropped, selectValue]);
  (0, import_react32.useEffect)(() => {
    if (!isDropped) {
      setCursor(-1);
    }
  }, [isDropped]);
  const applyDropDownPortalPosition = () => {
    if (inputRef.current && optionsListRef.current && window && useDropdownPortal) {
      const selectPortal = optionsListRef.current.parentElement;
      const scrollLeft = window.scrollX || document.documentElement.scrollLeft;
      const scrollTop = window.scrollY || document.documentElement.scrollTop;
      const inputWidth = `${inputRef.current.getBoundingClientRect().width}px`;
      const inputHeight = inputRef.current.getBoundingClientRect().height;
      const inputPosition = {
        top: `${scrollTop + inputHeight + inputRef.current.getBoundingClientRect().top - 5}px`,
        left: `${scrollLeft + inputRef.current.getBoundingClientRect().left}px`
      };
      Object.assign(selectPortal.style, {
        width: inputWidth,
        top: inputPosition.top,
        left: inputPosition.left
      });
    }
  };
  const applyDropDownPosition = () => {
    if (optionsListRef.current && inputRef.current && !useDropdownPortal) {
      optionsListRef.current.style.top = `${inputRef.current.offsetHeight - 5}px`;
    }
  };
  const closeOnScroll = () => {
    if (closeDropdownPortalOnScroll) {
      setIsDropped(false);
      onDropDownClose && onDropDownClose();
    }
  };
  (0, import_react32.useLayoutEffect)(() => {
    const ElementsWithScrolls = function() {
      const getComputedStyle2 = (
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        //@ts-ignore
        document.body && document.body.currentStyle ? function(elem) {
          return elem.currentStyle;
        } : function(elem) {
          var _a;
          return (_a = document.defaultView) == null ? void 0 : _a.getComputedStyle(elem, null);
        }
      );
      function getActualCss(elem, style2) {
        return getComputedStyle2(elem)[style2];
      }
      function isXScrollable(elem) {
        return elem.offsetWidth < elem.scrollWidth && autoOrScroll(getActualCss(elem, "overflow-x"));
      }
      function isYScrollable(elem) {
        return elem.offsetHeight < elem.scrollHeight && autoOrScroll(getActualCss(elem, "overflow-y"));
      }
      function autoOrScroll(text) {
        return text == "scroll" || text == "auto";
      }
      function hasScroller(elem) {
        return isYScrollable(elem) || isXScrollable(elem);
      }
      return function ElemenetsWithScrolls() {
        return [].filter.call(document.querySelectorAll("*"), hasScroller);
      };
    }();
    if (useDropdownPortal) {
      ElementsWithScrolls().forEach(
        (arr) => arr == null ? void 0 : arr.addEventListener("scroll", () => {
          closeOnScroll();
          applyDropDownPortalPosition();
        })
      );
      window.addEventListener("resize", applyDropDownPortalPosition);
      return () => {
        ElementsWithScrolls().forEach(
          (arr) => arr == null ? void 0 : arr.removeEventListener("scroll", () => {
            closeOnScroll();
            applyDropDownPortalPosition();
          })
        );
        window.removeEventListener("resize", applyDropDownPortalPosition);
      };
    }
  }, [inputRef.current]);
  useClickOutside(
    selectRef,
    () => {
      if (useDropdownPortal) {
        closeOnOutsideClick();
      } else {
        isDropped && setIsDropped(false);
        onDropDownClose && onDropDownClose();
      }
    },
    isDropped
  );
  const closeOnOutsideClick = () => {
    document.body.addEventListener("click", (event) => {
      var _a, _b, _c;
      if (isMulti) {
        if (!((_a = inputRef.current) == null ? void 0 : _a.contains(event.target)) && !((_b = optionsListRef.current) == null ? void 0 : _b.contains(event.target))) {
          isDropped && setIsDropped(false);
          onDropDownClose && onDropDownClose();
        }
      } else {
        if (!((_c = inputRef.current) == null ? void 0 : _c.contains(event.target))) {
          isDropped && setIsDropped(false);
          onDropDownClose && onDropDownClose();
        }
      }
    });
  };
  const focusElement = (pointer) => {
    const optionsList = getOptionsRefAsArray();
    optionsList == null ? void 0 : optionsList.map((option, index) => {
      if (index === pointer) {
        option.setAttribute("data-hover", "true");
      } else
        option.setAttribute("data-hover", "false");
    });
  };
  const blurAllElements = () => {
    const optionsList = getOptionsRefAsArray();
    optionsList == null ? void 0 : optionsList.map((option) => option.setAttribute("data-hover", "false"));
  };
  const getOptionsRefAsArray = () => {
    if (optionsListRef.current) {
      const optionsList = [
        ...optionsListRef.current.childNodes
      ];
      return optionsList;
    }
  };
  const internalClickHandler = (option, event) => {
    if (isMulti) {
      setSearchText("");
      const multiValue = Array.isArray(selectValue) ? [...selectValue] : [];
      multiValue.push(option);
      onChange && onChange(multiValue, event);
      setSelectValue(multiValue);
    } else {
      if (isClearable && !Array.isArray(selectValue) && option.value === (selectValue == null ? void 0 : selectValue.value)) {
        setSelectValue(null);
        onChange && onChange(null, event);
      } else {
        setSelectValue(option);
        onChange && onChange(option, event);
      }
      setIsDropped(false);
      setInternalOptions(options);
      onDropDownClose && onDropDownClose();
    }
  };
  const searchOptions = (options2, value2) => {
    return options2 == null ? void 0 : options2.filter((option) => {
      if (useSerialSearch) {
        return option.label.trim().toLowerCase().indexOf(value2.trim().toLowerCase()) === 0;
      }
      return option.label.trim().toLowerCase().includes(value2.trim().toLowerCase());
    });
  };
  const internalChangeHandler = (event) => {
    event.stopPropagation();
    const text = event.target.value;
    const mainOptions = isMulti && Array.isArray(selectValue) ? options == null ? void 0 : options.filter(
      (option) => !selectValue.find((data) => data.value === option.value)
    ) : options;
    setIsDropped(true);
    setSearchText(text);
    const filteredOptions = searchOptions(mainOptions, text);
    text === "" ? setInternalOptions(mainOptions) : setInternalOptions(filteredOptions);
  };
  const handleIconClick = (event) => {
    event.stopPropagation();
    if (isClearable) {
      if (isMulti) {
        onChange && onChange([], event);
        setSelectValue([]);
      } else {
        onChange && onChange(null, event);
        setSelectValue(null);
      }
    } else {
      setIsDropped(!isDropped);
      isDropped ? onDropDownClose && onDropDownClose() : onDropDownOpen && onDropDownOpen();
    }
  };
  const changeDrop = () => {
    setIsDropped(!isDropped);
    isDropped ? onDropDownClose && onDropDownClose() : onDropDownOpen && onDropDownOpen();
  };
  const clearPill = (clearValue, event) => {
    let tempArr = Array.isArray(selectValue) ? [...selectValue] : [];
    tempArr = tempArr.filter((arr) => arr.value !== clearValue);
    onChange && onChange(tempArr, event);
    setSelectValue(tempArr);
    setIsDropped(true);
  };
  const checkIfAllValuesSelected = () => {
    return Array.isArray(selectValue) && Array.isArray(options) && selectValue.length === options.length && options.every((el) => selectValue.find((data) => data.value === el.value));
  };
  const handleInputKeyChange = (event) => {
    const optionsList = getOptionsRefAsArray();
    switch (event.key) {
      case "ArrowDown":
        event.preventDefault();
        !isDropped && setIsDropped(true);
        setTimeout(() => {
          if (cursor === -1) {
            focusFirstOption();
          } else
            focusNextOption();
        });
        break;
      case "ArrowUp":
        event.preventDefault();
        focusPrevOption();
        break;
      case "Home":
        event.preventDefault();
        focusFirstOption();
        break;
      case "End":
        event.preventDefault();
        focusLastOption();
        break;
      default:
        break;
    }
    if (isMulti && event.code === "Backspace" && searchText === "" && Array.isArray(selectValue)) {
      const lastValue = selectValue[selectValue.length - 1];
      clearPill(lastValue == null ? void 0 : lastValue.value, event);
    }
    if (event.key === "Enter" || event.code === "Space") {
      if (event.currentTarget.tagName !== "INPUT") {
        event.preventDefault();
      } else {
        event.code !== "Space" && event.preventDefault();
      }
      if (isDropped) {
        optionsList == null ? void 0 : optionsList.map((option) => {
          if (option.getAttribute("data-hover") === "true") {
            const optionValue = internalOptions == null ? void 0 : internalOptions.find(
              (arr) => String(arr.value) === option.getAttribute("data-value")
            );
            !(optionValue == null ? void 0 : optionValue.disabled) && internalClickHandler(optionValue, event);
          }
        });
      } else if (!isDropped) {
        setIsDropped(true);
      }
    }
  };
  const focusNextOption = () => {
    if (Array.isArray(internalOptions)) {
      let skipStep = 1;
      while (cursor + skipStep < internalOptions.length && internalOptions[cursor + skipStep].disabled) {
        skipStep++;
      }
      cursor + skipStep < internalOptions.length && setCursor(cursor + skipStep);
    }
  };
  const focusPrevOption = () => {
    if (Array.isArray(internalOptions)) {
      let skipStep = 1;
      while (cursor - skipStep >= 0 && internalOptions[cursor - skipStep].disabled) {
        skipStep++;
      }
      cursor - skipStep >= 0 && setCursor(cursor - skipStep);
    }
  };
  const focusFirstOption = () => {
    if (Array.isArray(internalOptions)) {
      let skipStep = 0;
      while (skipStep < internalOptions.length && internalOptions[skipStep].disabled) {
        skipStep++;
      }
      if (skipStep < internalOptions.length) {
        setCursor(skipStep);
        focusElement(skipStep);
      }
    }
  };
  const focusLastOption = () => {
    if (Array.isArray(internalOptions)) {
      let skipStep = 1;
      while (internalOptions.length - skipStep >= 0 && internalOptions[internalOptions.length - skipStep].disabled) {
        skipStep++;
      }
      internalOptions.length - skipStep >= 0 && setCursor(internalOptions.length - skipStep);
    }
  };
  const inputKeyDownHandler = (event) => {
    event.stopPropagation();
    handleInputKeyChange(event);
  };
  const selectIconClass = selectIconRecipe({
    isDropped
  });
  const selectInputStyles = selectInputRecipe({
    error: error ? true : false,
    disabled: isDisabled
  });
  const selectInputElement = selectInputElementRecipe({
    error: error ? true : false
  });
  const inputStyles = inputRecipe({
    error: error ? true : false,
    isMulti
  });
  const renderDropDown = () => {
    return (0, import_jsx_runtime45.jsx)(
      FlexWithRef,
      {
        ref: optionsListRef,
        flexDirection: "column",
        className: `${selectListContainerStyle}`,
        role: "listbox",
        style: assignInlineVars({
          [selectVars.borderRadius]: borderRadius,
          [selectVars.color]: color,
          [selectVars.width]: width,
          [selectVars.minHeight]: minHeight,
          [selectVars.zIndex]: zIndex,
          [selectVars.maxDropDownHeight]: maxDropDownHeight
        }),
        children: !isLoading ? renderDropDownList() : (0, import_jsx_runtime45.jsx)("div", { className: loadingContentContainer, children: (loadingOptions == null ? void 0 : loadingOptions.loadingContent) || "Loading..." })
      }
    );
  };
  const renderDropDownList = () => {
    return Array.isArray(internalOptions) && (internalOptions == null ? void 0 : internalOptions.length) !== 0 ? internalOptions.map((option, ind) => {
      const selectListClass = selectListRecipe({
        disabled: option.disabled,
        active: !isMulti && !Array.isArray(selectValue) && option.value === (selectValue == null ? void 0 : selectValue.value)
      });
      return (
        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/interactive-supports-focus
        (0, import_jsx_runtime45.jsx)(
          "div",
          {
            ref: option.ref,
            role: "option",
            "data-disabled": option.disabled,
            "data-value": option.value,
            "aria-selected": !Array.isArray(selectValue) && option.value === (selectValue == null ? void 0 : selectValue.value),
            className: selectListClass,
            onClick: (event) => !option.disabled && internalClickHandler(option, event),
            onMouseEnter: () => {
              if (!option.disabled) {
                setCursor(ind);
                focusElement(ind);
              }
            },
            onMouseLeave: (event) => {
              event.currentTarget.setAttribute("data-hover", "false");
            },
            children: (0, import_jsx_runtime45.jsx)("span", { children: option.label })
          },
          `${option.value}`
        )
      );
    }) : (0, import_jsx_runtime45.jsx)("div", { className: noDataFoundStyles, children: checkIfAllValuesSelected() ? "No more Data!" : nothingFoundLabel || "Nothing Found!" });
  };
  const renderDropDownContainer = () => {
    return useDropdownPortal ? (0, import_jsx_runtime45.jsx)(Portal, { element: "div", style: assignInlineVars({ zIndex }), children: renderDropDown() }) : renderDropDown();
  };
  return (0, import_jsx_runtime45.jsxs)(
    FlexWithRef,
    {
      ref: (node) => {
        selectRef.current = node;
        if (typeof ref === "function") {
          ref(node);
        } else if (ref) {
          ref.current = node;
        }
      },
      flexDirection: "column",
      className: `${selectContainerStyles} ${className}`,
      style: {
        ...style,
        ...assignInlineVars({
          [selectVars.borderRadius]: borderRadius,
          [selectVars.color]: color,
          [selectVars.width]: width,
          [selectVars.minHeight]: minHeight,
          [selectVars.zIndex]: zIndex,
          [selectVars.maxDropDownHeight]: maxDropDownHeight
        })
      },
      children: [
        (0, import_jsx_runtime45.jsxs)(
          FlexWithRef,
          {
            role: "combobox",
            ref: inputRef,
            "aria-expanded": isDropped,
            tabIndex: 0,
            alignItems: "center",
            justifyContent: "space-between",
            className: `${selectInputStyles}`,
            onClick: changeDrop,
            onKeyDown: handleInputKeyChange,
            children: [
              (0, import_jsx_runtime45.jsxs)(
                FlexWithRef,
                {
                  className: inputTextContainer,
                  gap: "4px",
                  flexWrap: "wrap",
                  alignItems: "center",
                  children: [
                    isMulti && (Array.isArray(selectValue) && selectValue.length ? selectValue == null ? void 0 : selectValue.map((arr) => {
                      return (0, import_jsx_runtime45.jsx)(
                        Pill,
                        {
                          value: arr.label,
                          clearValue: (event) => {
                            clearPill(arr.value, event);
                          }
                        },
                        `${arr.value}`
                      );
                    }) : !isSearchable && (0, import_jsx_runtime45.jsx)(
                      "input",
                      {
                        className: selectInputElement,
                        disabled: true,
                        placeholder: placeholder || "Pick anything!"
                      }
                    )),
                    isSearchable && (0, import_jsx_runtime45.jsx)(
                      "input",
                      {
                        disabled: isDisabled,
                        className: inputStyles,
                        value: searchText,
                        placeholder: placeholder || "Search here",
                        onChange: internalChangeHandler,
                        onKeyDown: inputKeyDownHandler
                      }
                    ),
                    !isMulti && !isSearchable && !Array.isArray(selectValue) && (0, import_jsx_runtime45.jsx)(
                      "input",
                      {
                        className: selectInputElement,
                        value: (selectValue == null ? void 0 : selectValue.label) ? selectValue.label : "",
                        disabled: true,
                        placeholder: placeholder || "Pick one"
                      }
                    )
                  ]
                }
              ),
              !isLoading ? (0, import_jsx_runtime45.jsxs)(
                FlexWithRef,
                {
                  alignItems: "center",
                  className: selectIconClass,
                  onClick: handleIconClick,
                  children: [
                    DropIcon ? !isClearable && DropIcon : !isClearable && (0, import_jsx_runtime45.jsx)(ArrowDown, { width: 18, height: 18 }),
                    isClearable && (0, import_jsx_runtime45.jsx)(Clear, { width: 18, height: 18 })
                  ]
                }
              ) : (loadingOptions == null ? void 0 : loadingOptions.loader) || (0, import_jsx_runtime45.jsx)(Loader, { color })
            ]
          }
        ),
        isDropped && renderDropDownContainer(),
        error && typeof error !== "boolean" && (0, import_jsx_runtime45.jsx)("span", { className: selectErrorMsg, children: error })
      ]
    }
  );
};
var Select = (0, import_react32.forwardRef)(SelectComponent);

// node_modules/@hover-design/react/src/components/Select/index.ts
__reExport(Select_exports, select_star);
__reExport(Select_exports, pill_star);
import * as select_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Select/select.css.ts";
import * as pill_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Select/Pill/pill.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Select_exports);

// node_modules/@hover-design/react/src/components/Stepper/index.ts
var Stepper_exports = {};
__export(Stepper_exports, {
  Stepper: () => StepperWithRef,
  StepperStep: () => StepperStepWithRef
});

// node_modules/@hover-design/react/src/components/Stepper/Stepper.tsx
var import_react33 = __toESM(require_react());
var import_jsx_runtime46 = __toESM(require_jsx_runtime());
var StepperComponent = ({
  activeStep,
  onStepClick,
  size,
  borderRadius,
  orientation = "horizontal",
  labelOrientation = "horizontal",
  icon,
  completedIcon,
  progressIcon,
  baseStyles,
  completedStyles,
  progressStyles,
  dividerProps,
  children,
  className,
  style,
  ...nativeProps
}, ref) => {
  const _children = import_react33.Children.toArray(children);
  const items = _children.reduce((acc, item, index) => {
    const allowClick = typeof item.props.isStepClickable === "boolean" ? item.props.isStepClickable : typeof onStepClick === "function";
    const getStepState = () => {
      if (activeStep === index)
        return "stepProgress";
      if (activeStep > index)
        return "stepCompleted";
      return "stepInactive";
    };
    acc.push(
      (0, import_react33.cloneElement)(item, {
        icon: item.props.icon || icon || index + 1,
        completedIcon: item.props.completedIcon || completedIcon,
        progressIcon: item.props.progressIcon || progressIcon,
        key: index,
        isLastChild: _children.length === index + 1,
        stepState: getStepState(),
        borderRadius: item.props.borderRadius || borderRadius,
        baseStyles: item.props.baseStyles || baseStyles,
        completedStyles: item.props.completedStyles || completedStyles,
        progressStyles: item.props.progressStyles || progressStyles,
        dividerProps: item.props.dividerProps || dividerProps,
        className: item.props.className || className,
        style: item.props.style || style,
        orientation,
        labelOrientation,
        onClick: () => allowClick && typeof onStepClick === "function" && onStepClick(index),
        size
      })
    );
    return acc;
  }, []);
  return (0, import_jsx_runtime46.jsx)(
    FlexWithRef,
    {
      display: "inline-flex",
      flexDirection: orientation === "vertical" ? "column" : "row",
      alignItems: orientation === labelOrientation ? "center" : "normal",
      gap: "5px",
      style: { ...style || {} },
      className: className || "",
      ref,
      ...nativeProps,
      children: items
    }
  );
};
var StepperWithRef = import_react33.default.forwardRef(StepperComponent);

// node_modules/@hover-design/react/src/components/Stepper/index.ts
__reExport(Stepper_exports, stepper_styles_star);
import * as stepper_styles_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Stepper/stepper.styles.css.ts";

// node_modules/@hover-design/react/src/components/Stepper/StepperStep/StepperStep.tsx
var import_react34 = __toESM(require_react());
import {
  StepperDividerWrapperClass,
  StepperStepIconClass,
  stepperThemeClass,
  stepperThemeVars
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Stepper/stepper.styles.css.ts";
var import_jsx_runtime47 = __toESM(require_jsx_runtime());
var StepperStepComponent = ({
  children,
  className,
  style,
  icon,
  completedIcon,
  progressIcon,
  baseStyles,
  completedStyles,
  progressStyles,
  dividerProps,
  borderRadius,
  orientation,
  labelOrientation,
  stepState,
  isLastChild,
  ...nativeProps
}, ref) => {
  const assignVariables = assignInlineVars(
    eliminateUndefinedKeys({
      [stepperThemeVars.baseStyles.backgroundColor]: baseStyles == null ? void 0 : baseStyles.backgroundColor,
      [stepperThemeVars.baseStyles.color]: baseStyles == null ? void 0 : baseStyles.color,
      [stepperThemeVars.baseStyles.border]: baseStyles == null ? void 0 : baseStyles.border,
      [stepperThemeVars.completedStyles.backgroundColor]: completedStyles == null ? void 0 : completedStyles.backgroundColor,
      [stepperThemeVars.completedStyles.color]: completedStyles == null ? void 0 : completedStyles.color,
      [stepperThemeVars.completedStyles.border]: completedStyles == null ? void 0 : completedStyles.border,
      [stepperThemeVars.progressStyles.backgroundColor]: progressStyles == null ? void 0 : progressStyles.backgroundColor,
      [stepperThemeVars.progressStyles.color]: progressStyles == null ? void 0 : progressStyles.color,
      [stepperThemeVars.progressStyles.border]: progressStyles == null ? void 0 : progressStyles.border
    })
  );
  const StepperStepIconStyle = StepperStepIconClass({ stepState });
  const StepperDividerWrapperStyle = StepperDividerWrapperClass({
    orientation
  });
  const _Icon = () => {
    if (stepState === "stepCompleted") {
      return completedIcon || (0, import_jsx_runtime47.jsx)(CheckIcon, {});
    }
    if (stepState === "stepProgress") {
      return progressIcon || icon;
    }
    return icon;
  };
  const renderIcon = () => {
    return (0, import_jsx_runtime47.jsx)(
      FlexWithRef,
      {
        display: "inline-flex",
        alignItems: "center",
        justifyContent: "center",
        className: StepperStepIconStyle,
        ref,
        children: _Icon()
      }
    );
  };
  const renderDivider = () => {
    if (isLastChild)
      return null;
    return (0, import_jsx_runtime47.jsx)("div", { className: StepperDividerWrapperStyle, children: (0, import_jsx_runtime47.jsx)(
      Divider,
      {
        size: "2px",
        color: stepState === "stepCompleted" ? stepperThemeVars.completedStyles.backgroundColor : stepperThemeVars.baseStyles.backgroundColor,
        ...dividerProps,
        orientation
      }
    ) });
  };
  return (0, import_jsx_runtime47.jsx)(
    FlexWithRef,
    {
      display: "inline-flex",
      flexDirection: labelOrientation === "vertical" ? "column" : "row",
      alignItems: orientation === labelOrientation ? "center" : "flex-start",
      flexGrow: 1,
      style: { ...assignVariables, ...style || {} },
      className: `${stepperThemeClass} ${className || ""}`,
      ...nativeProps,
      children: orientation === labelOrientation ? (0, import_jsx_runtime47.jsxs)(import_jsx_runtime47.Fragment, { children: [
        renderIcon(),
        (0, import_jsx_runtime47.jsxs)(
          FlexWithRef,
          {
            display: "flex",
            alignItems: "center",
            alignSelf: "stretch",
            flexDirection: labelOrientation === "vertical" ? "column" : "row",
            children: [
              (0, import_jsx_runtime47.jsx)("div", { children }),
              renderDivider()
            ]
          }
        )
      ] }) : (0, import_jsx_runtime47.jsxs)(import_jsx_runtime47.Fragment, { children: [
        (0, import_jsx_runtime47.jsxs)(
          FlexWithRef,
          {
            display: "flex",
            alignItems: "center",
            alignSelf: "stretch",
            flexDirection: labelOrientation === "vertical" ? "row" : "column",
            children: [
              renderIcon(),
              renderDivider()
            ]
          }
        ),
        (0, import_jsx_runtime47.jsx)("div", { children })
      ] })
    }
  );
};
var StepperStepWithRef = import_react34.default.forwardRef(StepperStepComponent);

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Stepper_exports);

// node_modules/@hover-design/react/src/components/Switch/index.ts
var Switch_exports = {};
__export(Switch_exports, {
  Switch: () => Switch
});

// node_modules/@hover-design/react/src/components/Switch/Switch.tsx
var import_jsx_runtime48 = __toESM(require_jsx_runtime());
import { slider, switchInputStyle, switchLayout } from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Switch/switch.css.ts";
var Switch = ({
  status,
  onChange,
  isDisabled = false,
  className = "",
  ...nativeProps
}) => {
  return (0, import_jsx_runtime48.jsxs)("label", { className: switchLayout, children: [
    (0, import_jsx_runtime48.jsx)(
      "input",
      {
        ...nativeProps,
        className: `${switchInputStyle} ${className}`,
        type: "checkbox",
        checked: status,
        onChange: (e) => onChange(e.target.checked),
        disabled: isDisabled
      }
    ),
    (0, import_jsx_runtime48.jsx)("span", { className: slider })
  ] });
};

// node_modules/@hover-design/react/src/components/Switch/index.ts
__reExport(Switch_exports, switch_star);
import * as switch_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Switch/switch.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Switch_exports);

// node_modules/@hover-design/react/src/components/Tab/index.tsx
var Tab_exports = {};
__export(Tab_exports, {
  Tabs: () => Tabs
});

// node_modules/@hover-design/react/src/components/Tab/Tabs.tsx
var import_react35 = __toESM(require_react());
var import_jsx_runtime49 = __toESM(require_jsx_runtime());
import {
  badgeStyles,
  contentStyles,
  extendingBorderStyle,
  iconStyles,
  tabsHeaderContainerRecipe,
  tabsRecipe,
  tabsVars
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Tab/tabs.css.ts";
var TabComponent = ({
  defaultValue,
  orientation = "horizontal",
  value,
  color = "#2F80ED",
  backgroundColor = "#d7e9ff",
  outlineColor = "#EBECF0",
  onChange,
  grow = false,
  tabSize,
  textAlign = "center",
  tabsData,
  roundness = "4px",
  style,
  className,
  children,
  variant = "default",
  ...nativeProps
}, ref) => {
  const [selectedTab, setSelectedTab] = (0, import_react35.useState)(null);
  const [size, setSize] = (0, import_react35.useState)(tabSize);
  const tabsContainer = (0, import_react35.useRef)();
  (0, import_react35.useEffect)(() => {
    if (tabSize) {
      setSize(tabSize);
    } else {
      orientation === "vertical" ? setSize("fit-content") : setSize("40px");
    }
  }, [tabSize, orientation]);
  (0, import_react35.useEffect)(() => {
    const activeValue = value || defaultValue;
    const tab = tabsData.find((tabItem) => tabItem.value === activeValue);
    tab && setSelectedTab(tab);
  }, [defaultValue, tabsData, value]);
  const internalOnClickHandler = (event, tabItem) => {
    onChange && onChange(tabItem, event);
    !value && setSelectedTab(tabItem);
  };
  const tabsHeaderContainerClass = tabsHeaderContainerRecipe({
    orientation
  });
  const getAlignment = () => {
    switch (textAlign) {
      case "left":
        return "flex-start";
      case "center":
        return "center";
      case "right":
        return "flex-end";
      default:
        return "center";
    }
  };
  const selectPreviousTab = (tabIndex) => {
    if (tabIndex === 0) {
      let skipStep = 1;
      while (tabsData[tabsData.length - skipStep].disabled) {
        skipStep++;
      }
      focusAndSelectTab(tabsData[tabsData.length - skipStep]);
    } else {
      let skipStep = 1;
      while (tabsData[tabIndex - skipStep].disabled && skipStep < tabIndex) {
        skipStep++;
      }
      if (skipStep >= tabIndex && tabsData[0].disabled) {
        let altSkipStep = 1;
        while (tabsData[tabsData.length - altSkipStep].disabled) {
          altSkipStep++;
        }
        focusAndSelectTab(tabsData[tabsData.length - altSkipStep]);
      } else {
        focusAndSelectTab(tabsData[tabIndex - skipStep]);
      }
    }
  };
  const selectNextTab = (tabIndex) => {
    if (tabIndex === tabsData.length - 1) {
      let skipStep = 0;
      while (tabsData[skipStep].disabled) {
        skipStep++;
      }
      focusAndSelectTab(tabsData[skipStep]);
    } else {
      let skipStep = 1;
      while (tabsData[tabIndex + skipStep].disabled && tabIndex + skipStep < tabsData.length - 1) {
        skipStep++;
      }
      if (skipStep === tabsData.length - 1 - tabIndex && tabsData[tabsData.length - 1].disabled) {
        let altSkipStep = 0;
        while (tabsData[altSkipStep].disabled) {
          altSkipStep++;
        }
        focusAndSelectTab(tabsData[altSkipStep]);
      } else {
        focusAndSelectTab(tabsData[tabIndex + skipStep]);
      }
    }
  };
  const selectFirstTab = () => {
    !tabsData[0].disabled && focusAndSelectTab(tabsData[0]);
  };
  const selectLastTab = () => {
    !tabsData[tabsData.length - 1].disabled && focusAndSelectTab(tabsData[tabsData.length - 1]);
  };
  const focusAndSelectTab = (tabData) => {
    var _a;
    const tabsList = [
      ...tabsContainer.current.querySelectorAll("[role=tab]")
    ];
    setSelectedTab(tabData);
    (_a = tabsList.find((tab) => tab.ariaLabel === tabData.label)) == null ? void 0 : _a.focus();
  };
  const internalKeydownHandler = (event, tabIndex) => {
    event.stopPropagation();
    switch (event.key) {
      case `${orientation === "horizontal" ? "ArrowLeft" : "ArrowUp"}`:
        selectPreviousTab(tabIndex);
        break;
      case `${orientation === "horizontal" ? "ArrowRight" : "ArrowDown"}`:
        selectNextTab(tabIndex);
        break;
      case "Home":
        selectFirstTab();
        break;
      case "End":
        selectLastTab();
        break;
      default:
        break;
    }
  };
  return (0, import_jsx_runtime49.jsxs)(
    FlexWithRef,
    {
      ref,
      flexDirection: orientation === "vertical" ? "row" : "column",
      className,
      style: {
        ...assignInlineVars({
          [tabsVars.color]: color,
          [tabsVars.backgroundColor]: backgroundColor,
          [tabsVars.outlineColor]: outlineColor,
          [tabsVars.roundness]: roundness,
          [tabsVars.tabSize]: size
        }),
        ...style
      },
      ...nativeProps,
      children: [
        (0, import_jsx_runtime49.jsxs)(
          FlexWithRef,
          {
            flexDirection: orientation === "vertical" ? "column" : "row",
            role: "tablist",
            ref: tabsContainer,
            tabIndex: 0,
            gap: variant === "pill" ? "8px" : "normal",
            className: `${tabsHeaderContainerClass} hover-tabs-container`,
            children: [
              tabsData.map((tabItem, ind) => {
                const tabClass = tabsRecipe({
                  active: tabItem.value === (selectedTab == null ? void 0 : selectedTab.value),
                  variant,
                  disabled: tabItem.disabled,
                  orientation
                });
                return (0, import_jsx_runtime49.jsxs)(
                  FlexWithRef,
                  {
                    ref,
                    role: "tab",
                    alignItems: "center",
                    justifyContent: getAlignment(),
                    flexGrow: grow ? "1" : "0",
                    className: `${tabClass} hover-tab`,
                    onClick: (event) => !tabItem.disabled && internalOnClickHandler(event, tabItem),
                    onKeyDown: (event) => internalKeydownHandler(event, ind),
                    "aria-label": tabItem.label,
                    tabIndex: !tabItem.disabled ? 0 : 1,
                    children: [
                      tabItem.icon && (0, import_jsx_runtime49.jsx)(
                        FlexWithRef,
                        {
                          alignItems: "center",
                          justifyContent: "center",
                          className: `${iconStyles}`,
                          children: tabItem.icon
                        }
                      ),
                      tabItem.label && (0, import_jsx_runtime49.jsx)("span", { children: tabItem.label }),
                      tabItem.badge && (0, import_jsx_runtime49.jsx)(
                        BadgeWithRef,
                        {
                          label: tabItem.badge,
                          className: `${badgeStyles}`,
                          shape: "rounded",
                          color: "#DA2C2C"
                        }
                      )
                    ]
                  },
                  ind
                );
              }),
              variant !== "pill" && (0, import_jsx_runtime49.jsx)(
                FlexWithRef,
                {
                  flexGrow: grow ? "0" : "1",
                  className: `${extendingBorderStyle}`
                }
              )
            ]
          }
        ),
        selectedTab && (0, import_jsx_runtime49.jsx)("div", { className: `${contentStyles} hover-content-container`, children: children(selectedTab) })
      ]
    }
  );
};
var Tabs = (0, import_react35.forwardRef)(TabComponent);

// node_modules/@hover-design/react/src/components/Tab/index.tsx
__reExport(Tab_exports, tabs_star);
import * as tabs_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Tab/tabs.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Tab_exports);

// node_modules/@hover-design/react/src/components/Table/index.ts
var Table_exports = {};
__export(Table_exports, {
  Table: () => TableWithRef,
  TableCaption: () => TableCaptionWithRef,
  Tbody: () => TBodyWithRef,
  Td: () => TdWithRef,
  Tfoot: () => TFootWithRef,
  Th: () => ThWithRef,
  Thead: () => THeadWithRef,
  Tr: () => TrWithRef
});

// node_modules/@hover-design/react/src/components/Table/Table.tsx
var import_react36 = __toESM(require_react());
var import_jsx_runtime50 = __toESM(require_jsx_runtime());
import {
  tableContainerDefaults,
  tableDefaults,
  tableContainerThemeVars,
  tableThemeVars,
  tableContainerThemeClass,
  tableThemeClass
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Table/Table.css.ts";
import "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Table/Table.global.styles.css.ts";
var Table = ({
  addBorder = false,
  borderRadius = "4px",
  borderColor = "black",
  rowHeight = "1",
  alignContent = "left",
  alignHeading = "left",
  overrideTableContainerClass = "",
  overrideTableClass = "",
  cellPadding = "10px",
  striped = false,
  stripeColor = "#eee",
  children,
  className,
  style,
  horizontalSpacing = "0",
  ...nativeProps
}, ref) => {
  const tableContainerInlineVars = assignInlineVars({
    [tableContainerThemeVars.customBorderRadius]: borderRadius,
    [tableContainerThemeVars.customBorderColor]: addBorder ? borderColor : "transparent"
  });
  const tableInlineVars = assignInlineVars({
    [tableThemeVars.customStripeColor]: striped ? stripeColor : "",
    [tableThemeVars.customRowHeight]: rowHeight,
    [tableThemeVars.contentAlignment]: alignContent,
    [tableThemeVars.headerAlignment]: alignHeading,
    [tableThemeVars.customCellPadding]: cellPadding,
    [tableThemeVars.customHorizontalSpacing]: horizontalSpacing
  });
  return (0, import_jsx_runtime50.jsx)(
    "div",
    {
      style: { ...tableContainerInlineVars, ...style || {} },
      className: `${tableContainerDefaults} ${tableContainerThemeClass} ${overrideTableContainerClass} ${className || ""}`,
      children: (0, import_jsx_runtime50.jsx)(
        "table",
        {
          ref,
          style: { ...tableInlineVars, ...style || {} },
          className: `${tableDefaults} ${striped && "striped"} ${tableThemeClass} ${overrideTableClass} ${className || ""}`,
          ...nativeProps,
          children
        }
      )
    }
  );
};
var TableWithRef = import_react36.default.forwardRef(Table);

// node_modules/@hover-design/react/src/components/Table/index.ts
__reExport(Table_exports, Table_star2);
import * as Table_star2 from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Table/Table.css.ts";

// node_modules/@hover-design/react/src/components/Table/TableCaption/TableCaption.tsx
var import_react37 = __toESM(require_react());
var import_jsx_runtime51 = __toESM(require_jsx_runtime());
var TableCaption = ({ children, className, placement = "bottom", style, ...nativeProps }, ref) => {
  return (0, import_jsx_runtime51.jsx)(
    "caption",
    {
      ref,
      style: { captionSide: placement, paddingTop: "10px", ...style || {} },
      className,
      ...nativeProps,
      children
    }
  );
};
var TableCaptionWithRef = import_react37.default.forwardRef(TableCaption);

// node_modules/@hover-design/react/src/components/Table/Tbody/Tbody.tsx
var import_react38 = __toESM(require_react());
var import_jsx_runtime52 = __toESM(require_jsx_runtime());
var Tbody = ({ className, children, ...nativeProps }, ref) => {
  return (0, import_jsx_runtime52.jsx)("tbody", { ref, className, ...nativeProps, children });
};
var TBodyWithRef = import_react38.default.forwardRef(Tbody);

// node_modules/@hover-design/react/src/components/Table/Td/Td.tsx
var import_react39 = __toESM(require_react());
var import_jsx_runtime53 = __toESM(require_jsx_runtime());
var Td = ({ className, alignContent, children, style, ...nativeProps }, ref) => {
  return (0, import_jsx_runtime53.jsx)(
    "td",
    {
      ref,
      style: { textAlign: alignContent, ...style || {} },
      className,
      ...nativeProps,
      children
    }
  );
};
var TdWithRef = import_react39.default.forwardRef(Td);

// node_modules/@hover-design/react/src/components/Table/Tfoot/index.ts
var Tfoot_exports = {};
__export(Tfoot_exports, {
  Tfoot: () => TFootWithRef
});

// node_modules/@hover-design/react/src/components/Table/Tfoot/Tfoot.tsx
var import_react40 = __toESM(require_react());
var import_jsx_runtime54 = __toESM(require_jsx_runtime());
import { footerDefaults, tfootThemeClass, tfootThemeVars } from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Table/Tfoot/Tfoot.css.ts";
import "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Table/Tfoot/Tfoot.global.styles.css.ts";
var Tfoot = ({ children, backgroundColor = "#ddd", className, style, ...nativeProps }, ref) => {
  const assignVars = assignInlineVars({
    [tfootThemeVars.customBackgroundColor]: backgroundColor
  });
  return (0, import_jsx_runtime54.jsx)(
    "tfoot",
    {
      ref,
      style: { ...assignVars, ...style || {} },
      className: `${footerDefaults} ${tfootThemeClass} ${className || ""}`,
      ...nativeProps,
      children
    }
  );
};
var TFootWithRef = import_react40.default.forwardRef(Tfoot);

// node_modules/@hover-design/react/src/components/Table/Tfoot/index.ts
__reExport(Tfoot_exports, Tfoot_star2);
import * as Tfoot_star2 from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Table/Tfoot/Tfoot.css.ts";

// node_modules/@hover-design/react/src/components/Table/index.ts
__reExport(Table_exports, Tfoot_exports);

// node_modules/@hover-design/react/src/components/Table/Th/Th.tsx
var import_react41 = __toESM(require_react());
var import_jsx_runtime55 = __toESM(require_jsx_runtime());
var Th = ({ className, alignHeading, children, ...nativeProps }, ref) => {
  return (0, import_jsx_runtime55.jsx)(
    "th",
    {
      ref,
      style: { textAlign: alignHeading },
      className,
      ...nativeProps,
      children
    }
  );
};
var ThWithRef = import_react41.default.forwardRef(Th);

// node_modules/@hover-design/react/src/components/Table/Thead/index.ts
var Thead_exports = {};
__export(Thead_exports, {
  Thead: () => THeadWithRef
});

// node_modules/@hover-design/react/src/components/Table/Thead/Thead.tsx
var import_react42 = __toESM(require_react());
var import_jsx_runtime56 = __toESM(require_jsx_runtime());
import { headerDefaults, theadThemeClass, theadThemeVars } from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Table/Thead/Thead.css.ts";
import "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Table/Thead/Thead.global.styles.css.ts";
var Thead = ({ children, backgroundColor = "#ddd", className, style, ...nativeProps }, ref) => {
  const assignVars = assignInlineVars({
    [theadThemeVars.customBackgroundColor]: backgroundColor
  });
  return (0, import_jsx_runtime56.jsx)(
    "thead",
    {
      ref,
      style: { ...assignVars, ...style || {} },
      className: `${headerDefaults} ${theadThemeClass} ${className || ""}`,
      ...nativeProps,
      children
    }
  );
};
var THeadWithRef = import_react42.default.forwardRef(Thead);

// node_modules/@hover-design/react/src/components/Table/Thead/index.ts
__reExport(Thead_exports, Thead_star2);
import * as Thead_star2 from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Table/Thead/Thead.css.ts";

// node_modules/@hover-design/react/src/components/Table/index.ts
__reExport(Table_exports, Thead_exports);

// node_modules/@hover-design/react/src/components/Table/Tr/Tr.tsx
var import_react43 = __toESM(require_react());
var import_jsx_runtime57 = __toESM(require_jsx_runtime());
var Tr = ({ className, children, ...nativeProps }, ref) => {
  return (0, import_jsx_runtime57.jsx)("tr", { ref, className, ...nativeProps, children });
};
var TrWithRef = import_react43.default.forwardRef(Tr);

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Table_exports);

// node_modules/@hover-design/react/src/components/TextArea/index.ts
var TextArea_exports = {};
__export(TextArea_exports, {
  TextArea: () => TextAreaWithRef
});

// node_modules/@hover-design/react/src/components/TextArea/TextArea.tsx
var import_react44 = __toESM(require_react());
var import_jsx_runtime58 = __toESM(require_jsx_runtime());
import {
  textAreaStyle,
  textAreaResize,
  textAreaColorClass,
  textAreaColorVars
} from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/TextArea/text-area.css.ts";
var TextAreaComponent = ({
  className,
  children,
  style,
  fixedSize = false,
  statusBorder = "#082D59",
  ...nativeTextAreaProps
}, ref) => {
  const textAreaBorder = assignInlineVars({
    [textAreaColorVars.textAreaBorderColor.statusBorderColor]: statusBorder
  });
  Object.assign(textAreaBorder, style);
  return (0, import_jsx_runtime58.jsx)(
    "textarea",
    {
      className: `${textAreaStyle} ${className} ${fixedSize ? textAreaResize : null} ${textAreaColorClass}`,
      style: textAreaBorder,
      ref,
      ...nativeTextAreaProps,
      children
    }
  );
};
var TextAreaWithRef = import_react44.default.forwardRef(TextAreaComponent);

// node_modules/@hover-design/react/src/components/TextArea/index.ts
__reExport(TextArea_exports, text_area_star);
import * as text_area_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/TextArea/text-area.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, TextArea_exports);

// node_modules/@hover-design/react/src/components/Tooltip/index.ts
var Tooltip_exports = {};
__export(Tooltip_exports, {
  Tooltip: () => Tooltip
});

// node_modules/@hover-design/react/src/components/Tooltip/Tooltip.tsx
var import_react45 = __toESM(require_react());
import { tooltipContainerStyles } from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Tooltip/tooltip.styles.css.ts";
var import_jsx_runtime59 = __toESM(require_jsx_runtime());
var TooltipComponent = ({
  children,
  label,
  color = "#2C2E33",
  labelColor = "white",
  multiLine = false,
  className,
  style,
  ...props
}, ref) => {
  return (0, import_jsx_runtime59.jsx)(
    Popover,
    {
      ref,
      style: {
        ...assignInlineVars({
          backgroundColor: color,
          color: labelColor,
          whiteSpace: multiLine ? "wrap" : "nowrap"
        }),
        ...style
      },
      content: label,
      className: `${tooltipContainerStyles} ${className}`,
      ...props,
      children
    }
  );
};
var Tooltip = (0, import_react45.forwardRef)(TooltipComponent);

// node_modules/@hover-design/react/src/components/Tooltip/index.ts
__reExport(Tooltip_exports, tooltip_styles_star);
import * as tooltip_styles_star from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/Tooltip/tooltip.styles.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, Tooltip_exports);

// node_modules/@hover-design/react/src/components/UnstyledButton/index.ts
var UnstyledButton_exports = {};
__export(UnstyledButton_exports, {
  UnstyledButton: () => UnstyledButtonWithRef
});

// node_modules/@hover-design/react/src/components/UnstyledButton/UnstyledButton.tsx
var import_react46 = __toESM(require_react());
var import_jsx_runtime60 = __toESM(require_jsx_runtime());
import { unstyledButtonClass } from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/UnstyledButton/UnstyledButton.css.ts";
var UnstyledButtonComponent = ({ children, className, ...nativeProps }, ref) => {
  return (0, import_jsx_runtime60.jsx)(
    "button",
    {
      className: `${unstyledButtonClass} ${className || ""}`,
      ref,
      ...nativeProps,
      children
    }
  );
};
var UnstyledButtonWithRef = import_react46.default.forwardRef(UnstyledButtonComponent);

// node_modules/@hover-design/react/src/components/UnstyledButton/index.ts
__reExport(UnstyledButton_exports, UnstyledButton_star2);
import * as UnstyledButton_star2 from "C:/Users/user/OneDrive - Universiti Sains Malaysia/CS Society/CSS Web Training/css-webdev-train/node_modules/@hover-design/react/src/components/UnstyledButton/UnstyledButton.css.ts";

// node_modules/@hover-design/react/src/index.ts
__reExport(src_exports2, UnstyledButton_exports);
export {
  AccordionWithRef as Accordion,
  AccordionContentWithRef as AccordionContent,
  AccordionGroupWithRef as AccordionGroup,
  AccordionSummaryWithRef as AccordionSummary,
  Alert,
  AvatarWithRef as Avatar,
  AvatarGroupWithRef as AvatarGroup,
  BadgeWithRef as Badge,
  Banner,
  BreadcrumbWithRef as Breadcrumb,
  ButtonWithRef as Button,
  CardWithRef as Card,
  CheckboxWithRef as Checkbox,
  CheckboxGroupWithRef as CheckboxGroup,
  DateTimePickerWithRef as DateTimePicker,
  Dialog,
  Divider,
  FlexWithRef as Flex,
  FlexComponent,
  GridWithRef as Grid,
  GridComponent,
  HoverContext,
  HoverProvider,
  Icon,
  InputWithRef as Input,
  LabelWithRef as Label,
  ListWithRef as List,
  ListItemWithRef as ListItem,
  Loader,
  Modal,
  NativeSelect,
  Pill,
  Popover,
  Portal,
  Progress,
  RadioWithRef as Radio,
  RadioGroupWithRef as RadioGroup,
  Select,
  Spinner,
  StepperWithRef as Stepper,
  StepperStepWithRef as StepperStep,
  Switch,
  TableWithRef as Table,
  TableCaptionWithRef as TableCaption,
  Tabs,
  TBodyWithRef as Tbody,
  TdWithRef as Td,
  TextAreaWithRef as TextArea,
  TFootWithRef as Tfoot,
  ThWithRef as Th,
  THeadWithRef as Thead,
  Tooltip,
  TrWithRef as Tr,
  UnstyledButtonWithRef as UnstyledButton,
  useHoverTheme
};
//# sourceMappingURL=@hover-design_react.js.map
